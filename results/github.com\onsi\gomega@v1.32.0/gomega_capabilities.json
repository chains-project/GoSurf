{
	"capabilityInfo":  [
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Message"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/format.MessageWithDiff github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.MessageWithDiff"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "format.go",
						"line":  "161",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Object"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher$1 github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher$1"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "107",
						"column":  "107"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gcustom.formatObject github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.formatObject"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "25",
						"column":  "22"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "224",
						"column":  "32"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "230",
						"column":  "32"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.Build github.com/onsi/gomega/gexec.doBuild github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Build"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "33",
						"column":  "16"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "51",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.BuildIn github.com/onsi/gomega/gexec.doBuild github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "47",
						"column":  "16"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "51",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.BuildWithEnvironment github.com/onsi/gomega/gexec.doBuild github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "40",
						"column":  "16"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "51",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.CleanupBuildArtifacts os.RemoveAll",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CleanupBuildArtifacts"
				},
				{
					"name":  "os.RemoveAll",
					"site":  {
						"filename":  "build.go",
						"line":  "216",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTest github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "79",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestIn github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "115",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "97",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTest github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "90",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "126",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "108",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.doBuild github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "51",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.doCompileTest github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath",
					"site":  {
						"filename":  "build.go",
						"line":  "159",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.newExecutablePath github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.newExecutablePath"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory",
					"site":  {
						"filename":  "build.go",
						"line":  "190",
						"column":  "35"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gexec.temporaryDirectory github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.temporaryDirectory"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp",
					"site":  {
						"filename":  "build.go",
						"line":  "226",
						"column":  "32"
					}
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "68",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "78",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "test_server.go",
						"line":  "253",
						"column":  "19"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "246",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "314",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "337",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "273",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "92",
						"column":  "42"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "140",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "57"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "182",
						"column":  "39"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "105",
						"column":  "43"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "156",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "80"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "210",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "50",
						"column":  "37"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "140",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/ghttp.init google.golang.org/protobuf/proto.init google.golang.org/protobuf/internal/errors.init google.golang.org/protobuf/internal/detrand.init google.golang.org/protobuf/internal/detrand.binaryHash os.Open",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.init"
				},
				{
					"name":  "google.golang.org/protobuf/proto.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/errors.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.binaryHash",
					"site":  {
						"filename":  "rand.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "os.Open",
					"site":  {
						"filename":  "rand.go",
						"line":  "46",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP (*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo",
					"site":  {
						"filename":  "test_server.go",
						"line":  "277",
						"column":  "21"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init google.golang.org/protobuf/runtime/protoimpl.init google.golang.org/protobuf/internal/impl.init google.golang.org/protobuf/internal/detrand.init google.golang.org/protobuf/internal/detrand.binaryHash os.Open",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init"
				},
				{
					"name":  "google.golang.org/protobuf/runtime/protoimpl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.binaryHash",
					"site":  {
						"filename":  "rand.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "os.Open",
					"site":  {
						"filename":  "rand.go",
						"line":  "46",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.G"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak.HaveLeaked github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.HaveLeaked"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "138",
						"column":  "112"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines",
					"site":  {
						"filename":  "ginkgo_parallel_client.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "164",
						"column":  "18"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "277",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "32",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "49",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "33",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "23",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "78",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "58",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace"
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*os.File).Read",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*os.File).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/gmeasure.NewExperimentCache os.MkdirAll",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gmeasure.NewExperimentCache"
				},
				{
					"name":  "os.MkdirAll",
					"site":  {
						"filename":  "cache.go",
						"line":  "30",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Clear os.Remove",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Clear"
				},
				{
					"name":  "os.Remove",
					"site":  {
						"filename":  "cache.go",
						"line":  "100",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Delete os.Remove",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Delete"
				},
				{
					"name":  "os.Remove",
					"site":  {
						"filename":  "cache.go",
						"line":  "201",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).List (github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader os.Open",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).List"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader",
					"site":  {
						"filename":  "cache.go",
						"line":  "79",
						"column":  "34"
					}
				},
				{
					"name":  "os.Open",
					"site":  {
						"filename":  "cache.go",
						"line":  "57",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Load os.Open",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Load"
				},
				{
					"name":  "os.Open",
					"site":  {
						"filename":  "cache.go",
						"line":  "156",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Save os.Create",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Save"
				},
				{
					"name":  "os.Create",
					"site":  {
						"filename":  "cache.go",
						"line":  "180",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader os.Open",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader"
				},
				{
					"name":  "os.Open",
					"site":  {
						"filename":  "cache.go",
						"line":  "57",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "222",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "226",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "fields.go",
						"line":  "153",
						"column":  "36"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "160",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "keys.go",
						"line":  "114",
						"column":  "36"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "pointer.go",
						"line":  "39",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "errors",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/gstruct/errors.NestedError).Error (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct/errors.NestedError).Error"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "nested_types.go",
						"line":  "27",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct/errors",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "errors",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/gstruct/errors.AggregateError).Error (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gstruct/errors.AggregateError).Error"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "nested_types.go",
						"line":  "64",
						"column":  "22"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct/errors",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3 (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "307",
						"column":  "3"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "446",
						"column":  "28"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3 (*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "478",
						"column":  "110"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "446",
						"column":  "28"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetError (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetError"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "135",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "151",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gutil",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/internal/gutil.MkdirTemp os.MkdirTemp",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal/gutil.MkdirTemp"
				},
				{
					"name":  "os.MkdirTemp",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "43",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal/gutil",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gutil",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/internal/gutil.ReadDir os.ReadDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadDir"
				},
				{
					"name":  "os.ReadDir",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "25",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal/gutil",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gutil",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/internal/gutil.ReadFile os.ReadFile",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadFile"
				},
				{
					"name":  "os.ReadFile",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "39",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal/gutil",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gutil",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/internal/gutil.WriteFile os.WriteFile",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal/gutil.WriteFile"
				},
				{
					"name":  "os.WriteFile",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "47",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal/gutil",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match$1 (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match$1"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "45",
						"column":  "97"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/matchers.appendMissingElements github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.appendMissingElements"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "148",
						"column":  "16"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.extractField"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "github.com/onsi/gomega/matchers.normalise gopkg.in/yaml.v3.Marshal (*gopkg.in/yaml.v3.encoder).finish (*gopkg.in/yaml.v3.encoder).emit gopkg.in/yaml.v3.yaml_emitter_emit gopkg.in/yaml.v3.yaml_emitter_state_machine gopkg.in/yaml.v3.yaml_emitter_emit_document_end gopkg.in/yaml.v3.yaml_emitter_flush (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.normalise"
				},
				{
					"name":  "gopkg.in/yaml.v3.Marshal",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "58",
						"column":  "29"
					}
				},
				{
					"name":  "(*gopkg.in/yaml.v3.encoder).finish",
					"site":  {
						"filename":  "yaml.go",
						"line":  "223",
						"column":  "10"
					}
				},
				{
					"name":  "(*gopkg.in/yaml.v3.encoder).emit",
					"site":  {
						"filename":  "encode.go",
						"line":  "72",
						"column":  "8"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_emit",
					"site":  {
						"filename":  "encode.go",
						"line":  "81",
						"column":  "26"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_state_machine",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "153",
						"column":  "33"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_emit_document_end",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "267",
						"column":  "40"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_flush",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "523",
						"column":  "24"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "writerc.go",
						"line":  "44",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage",
					"site":  {
						"filename":  "and.go",
						"line":  "30",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "and.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "and.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "32",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "36",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).Match os.Stat",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).Match"
				},
				{
					"name":  "os.Stat",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "37",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).Match os.Stat",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).Match"
				},
				{
					"name":  "os.Stat",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "37",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).Match os.Stat",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).Match"
				},
				{
					"name":  "os.Stat",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "22",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "17",
						"column":  "90"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "47",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "48",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "42",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "24",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "17",
						"column":  "112"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "28",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "40",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "44",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "15",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "18",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "39",
						"column":  "105"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "22",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "60",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "19",
						"column":  "80"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "34",
						"column":  "76"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "27",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "138",
						"column":  "17"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "21",
						"column":  "100"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "152",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "169",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "20",
						"column":  "105"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "173",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "17",
						"column":  "106"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "20",
						"column":  "110"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "25",
						"column":  "71"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "18",
						"column":  "101"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "29",
						"column":  "75"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "59",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "17",
						"column":  "17"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "64",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "50",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "81",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "31",
						"column":  "70"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "17",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "35",
						"column":  "74"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "89",
						"column":  "51"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_field.go",
						"line":  "73",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "96",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "51",
						"column":  "110"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "33",
						"column":  "116"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "69",
						"column":  "110"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "101",
						"column":  "126"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "32",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "18",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "47",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "52",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "26",
						"column":  "130"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "56",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "62",
						"column":  "38"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "43",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "30",
						"column":  "97"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "52",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "36",
						"column":  "106"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "75",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "23",
						"column":  "69"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "16",
						"column":  "112"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "27",
						"column":  "73"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "30",
						"column":  "83"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "22",
						"column":  "78"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "34",
						"column":  "63"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "17",
						"column":  "104"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "17",
						"column":  "104"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_value.go",
						"line":  "25",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "76",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "46",
						"column":  "25"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "83",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "35",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "46",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "40",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "46",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "30",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "18",
						"column":  "98"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "22",
						"column":  "61"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "39",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "44",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "or.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "or.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage",
					"site":  {
						"filename":  "or.go",
						"line":  "38",
						"column":  "55"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "78",
						"column":  "18"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "22",
						"column":  "87"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "97",
						"column":  "97"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "104",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "20",
						"column":  "88"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "65",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "37",
						"column":  "77"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match github.com/onsi/gomega/format.Object (github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "25",
						"column":  "78"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/matchers.notADirectoryError).Error (github.com/onsi/gomega/matchers.notADirectoryError).Mode (*os.fileStat).Mode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/matchers.notADirectoryError).Error"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notADirectoryError).Mode",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "19",
						"column":  "20"
					}
				},
				{
					"name":  "(*os.fileStat).Mode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_FILES",
			"depPath":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error (github.com/onsi/gomega/matchers.notARegularFileError).IsDir (*os.fileStat).IsDir",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).Error"
				},
				{
					"name":  "(github.com/onsi/gomega/matchers.notARegularFileError).IsDir",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "19",
						"column":  "21"
					}
				},
				{
					"name":  "(*os.fileStat).IsDir"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Message"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/format.MessageWithDiff github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.MessageWithDiff"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "format.go",
						"line":  "161",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Object"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher$1 github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher$1"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "107",
						"column":  "107"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gcustom.formatObject github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.formatObject"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "25",
						"column":  "22"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "224",
						"column":  "32"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "230",
						"column":  "32"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "267",
						"column":  "80"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "68",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "78",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*net/http.http2responseWriter).WriteHeader",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*net/http.http2responseWriter).WriteHeader",
					"site":  {
						"filename":  "test_server.go",
						"line":  "233",
						"column":  "17"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*net/http.http2responseWriter).Header",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*net/http.http2responseWriter).Header",
					"site":  {
						"filename":  "handlers.go",
						"line":  "237",
						"column":  "42"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 (*net/http.http2responseWriter).Header",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "(*net/http.http2responseWriter).Header",
					"site":  {
						"filename":  "handlers.go",
						"line":  "324",
						"column":  "31"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 (*net/http.http2responseWriter).Header",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "(*net/http.http2responseWriter).Header",
					"site":  {
						"filename":  "handlers.go",
						"line":  "348",
						"column":  "31"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*net/http.http2responseWriter).Header",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*net/http.http2responseWriter).Header",
					"site":  {
						"filename":  "handlers.go",
						"line":  "263",
						"column":  "42"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (net/http.Header).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "handlers.go",
						"line":  "86",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*net/http.body).Close",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "handlers.go",
						"line":  "138",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (net/http.Header).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*net/http.Request).ParseForm",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*net/http.Request).ParseForm",
					"site":  {
						"filename":  "handlers.go",
						"line":  "179",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 net/http.CanonicalHeaderKey",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "net/http.CanonicalHeaderKey",
					"site":  {
						"filename":  "handlers.go",
						"line":  "104",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 (*net/http.body).Close",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "handlers.go",
						"line":  "154",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (net/http.Header).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "47"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 (*net/http.body).Close",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "handlers.go",
						"line":  "204",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "50",
						"column":  "37"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*net/http.body).Close",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "handlers.go",
						"line":  "138",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.NewServer net/http/httptest.NewServer (*net/http/httptest.Server).Start (*net.TCPListener).Addr",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.NewServer"
				},
				{
					"name":  "net/http/httptest.NewServer",
					"site":  {
						"filename":  "test_server.go",
						"line":  "144",
						"column":  "39"
					}
				},
				{
					"name":  "(*net/http/httptest.Server).Start",
					"site":  {
						"filename":  "server.go",
						"line":  "107",
						"column":  "10"
					}
				},
				{
					"name":  "(*net.TCPListener).Addr",
					"site":  {
						"filename":  "server.go",
						"line":  "132",
						"column":  "37"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.NewTLSServer net/http/httptest.NewTLSServer (*net/http/httptest.Server).StartTLS (*net.TCPListener).Addr",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.NewTLSServer"
				},
				{
					"name":  "net/http/httptest.NewTLSServer",
					"site":  {
						"filename":  "test_server.go",
						"line":  "158",
						"column":  "42"
					}
				},
				{
					"name":  "(*net/http/httptest.Server).StartTLS",
					"site":  {
						"filename":  "server.go",
						"line":  "192",
						"column":  "13"
					}
				},
				{
					"name":  "(*net.TCPListener).Addr",
					"site":  {
						"filename":  "server.go",
						"line":  "183",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.NewUnstartedServer net/http/httptest.NewUnstartedServer net/http/httptest.newLocalListener net.Listen",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.NewUnstartedServer"
				},
				{
					"name":  "net/http/httptest.NewUnstartedServer",
					"site":  {
						"filename":  "test_server.go",
						"line":  "151",
						"column":  "48"
					}
				},
				{
					"name":  "net/http/httptest.newLocalListener",
					"site":  {
						"filename":  "server.go",
						"line":  "119",
						"column":  "29"
					}
				},
				{
					"name":  "net.Listen",
					"site":  {
						"filename":  "server.go",
						"line":  "62",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).Addr (*net.TCPListener).Addr",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).Addr"
				},
				{
					"name":  "(*net.TCPListener).Addr",
					"site":  {
						"filename":  "test_server.go",
						"line":  "205",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).Close (*net/http/httptest.Server).Close (*net.TCPListener).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).Close"
				},
				{
					"name":  "(*net/http/httptest.Server).Close",
					"site":  {
						"filename":  "test_server.go",
						"line":  "216",
						"column":  "15"
					}
				},
				{
					"name":  "(*net.TCPListener).Close",
					"site":  {
						"filename":  "server.go",
						"line":  "206",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).CloseClientConnections (*net/http/httptest.Server).CloseClientConnections (*net/http/httptest.Server).closeConnChan (*net/http.loggingConn).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).CloseClientConnections"
				},
				{
					"name":  "(*net/http/httptest.Server).CloseClientConnections",
					"site":  {
						"filename":  "test_server.go",
						"line":  "392",
						"column":  "41"
					}
				},
				{
					"name":  "(*net/http/httptest.Server).closeConnChan",
					"site":  {
						"filename":  "server.go",
						"line":  "271",
						"column":  "3"
					}
				},
				{
					"name":  "(*net/http.loggingConn).Close",
					"site":  {
						"filename":  "server.go",
						"line":  "381",
						"column":  "9"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).Reset (*net/http/httptest.Server).CloseClientConnections (*net/http/httptest.Server).closeConnChan (*net/http.loggingConn).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).Reset"
				},
				{
					"name":  "(*net/http/httptest.Server).CloseClientConnections",
					"site":  {
						"filename":  "test_server.go",
						"line":  "370",
						"column":  "41"
					}
				},
				{
					"name":  "(*net/http/httptest.Server).closeConnChan",
					"site":  {
						"filename":  "server.go",
						"line":  "271",
						"column":  "3"
					}
				},
				{
					"name":  "(*net/http.loggingConn).Close",
					"site":  {
						"filename":  "server.go",
						"line":  "381",
						"column":  "9"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP (*net/http.body).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "test_server.go",
						"line":  "273",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).Start (*net/http/httptest.Server).Start (*net.TCPListener).Addr",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).Start"
				},
				{
					"name":  "(*net/http/httptest.Server).Start",
					"site":  {
						"filename":  "test_server.go",
						"line":  "191",
						"column":  "24"
					}
				},
				{
					"name":  "(*net.TCPListener).Addr",
					"site":  {
						"filename":  "server.go",
						"line":  "132",
						"column":  "37"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.G"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak.HaveLeaked github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.HaveLeaked"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "138",
						"column":  "112"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines",
					"site":  {
						"filename":  "ginkgo_parallel_client.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "164",
						"column":  "18"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "277",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "32",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "49",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "33",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "23",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "78",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "58",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "211",
						"column":  "50"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "222",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "226",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "fields.go",
						"line":  "153",
						"column":  "36"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "160",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "keys.go",
						"line":  "114",
						"column":  "36"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "pointer.go",
						"line":  "39",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "errors",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/gstruct/errors.NestedError).Error (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct/errors.NestedError).Error"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "nested_types.go",
						"line":  "27",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct/errors",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "errors",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(github.com/onsi/gomega/gstruct/errors.AggregateError).Error (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gstruct/errors.AggregateError).Error"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "nested_types.go",
						"line":  "64",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct/errors",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3 (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "307",
						"column":  "3"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "446",
						"column":  "28"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3 (*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/internal.AsyncAssertion).match$1 (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "478",
						"column":  "110"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "446",
						"column":  "28"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "409",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "assertion.go",
						"line":  "95",
						"column":  "41"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetError (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetError"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "135",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "151",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 (*net/http.body).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "83",
						"column":  "4"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match$1 (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match$1"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "45",
						"column":  "97"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/matchers.appendMissingElements github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.appendMissingElements"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "148",
						"column":  "16"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.extractField"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/matchers.formatHttpResponse (*net/http.body).Close",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse"
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "80",
						"column":  "3"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/matchers.normalise gopkg.in/yaml.v3.Marshal (*gopkg.in/yaml.v3.encoder).finish (*gopkg.in/yaml.v3.encoder).emit gopkg.in/yaml.v3.yaml_emitter_emit gopkg.in/yaml.v3.yaml_emitter_state_machine gopkg.in/yaml.v3.yaml_emitter_emit_document_end gopkg.in/yaml.v3.yaml_emitter_flush (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.normalise"
				},
				{
					"name":  "gopkg.in/yaml.v3.Marshal",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "58",
						"column":  "29"
					}
				},
				{
					"name":  "(*gopkg.in/yaml.v3.encoder).finish",
					"site":  {
						"filename":  "yaml.go",
						"line":  "223",
						"column":  "10"
					}
				},
				{
					"name":  "(*gopkg.in/yaml.v3.encoder).emit",
					"site":  {
						"filename":  "encode.go",
						"line":  "72",
						"column":  "8"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_emit",
					"site":  {
						"filename":  "encode.go",
						"line":  "81",
						"column":  "26"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_state_machine",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "153",
						"column":  "33"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_emit_document_end",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "267",
						"column":  "40"
					}
				},
				{
					"name":  "gopkg.in/yaml.v3.yaml_emitter_flush",
					"site":  {
						"filename":  "emitterc.go",
						"line":  "523",
						"column":  "24"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "writerc.go",
						"line":  "44",
						"column":  "74"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.toString"
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage",
					"site":  {
						"filename":  "and.go",
						"line":  "30",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "and.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "and.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "32",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "36",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "17",
						"column":  "90"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "47",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage github.com/google/go-cmp/cmp.Diff (*github.com/google/go-cmp/cmp.defaultReporter).String (github.com/google/go-cmp/cmp.formatOptions).FormatDiff (github.com/google/go-cmp/cmp.formatOptions).FormatDiffSlice strings.TrimFunc strings.TrimLeftFunc strings.indexFunc net/http.isNotToken",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.Diff",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "44",
						"column":  "72"
					}
				},
				{
					"name":  "(*github.com/google/go-cmp/cmp.defaultReporter).String",
					"site":  {
						"filename":  "compare.go",
						"line":  "132",
						"column":  "15"
					}
				},
				{
					"name":  "(github.com/google/go-cmp/cmp.formatOptions).FormatDiff",
					"site":  {
						"filename":  "report.go",
						"line":  "45",
						"column":  "36"
					}
				},
				{
					"name":  "(github.com/google/go-cmp/cmp.formatOptions).FormatDiffSlice",
					"site":  {
						"filename":  "report_compare.go",
						"line":  "108",
						"column":  "30"
					}
				},
				{
					"name":  "strings.TrimFunc",
					"site":  {
						"filename":  "report_slices.go",
						"line":  "209",
						"column":  "108"
					}
				},
				{
					"name":  "strings.TrimLeftFunc",
					"site":  {
						"filename":  "strings.go",
						"line":  "825",
						"column":  "35"
					}
				},
				{
					"name":  "strings.indexFunc",
					"site":  {
						"filename":  "strings.go",
						"line":  "802",
						"column":  "16"
					}
				},
				{
					"name":  "net/http.isNotToken",
					"site":  {
						"filename":  "strings.go",
						"line":  "845",
						"column":  "7"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "48",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "42",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "24",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "17",
						"column":  "112"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "28",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "40",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "44",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "15",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "18",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "39",
						"column":  "105"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "22",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "60",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "19",
						"column":  "80"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "34",
						"column":  "76"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "27",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "138",
						"column":  "17"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "21",
						"column":  "100"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "152",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "169",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "20",
						"column":  "105"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "173",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "17",
						"column":  "106"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "18",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "25",
						"column":  "71"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "18",
						"column":  "101"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "29",
						"column":  "75"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "59",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "17",
						"column":  "17"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "64",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "50",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "81",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "31",
						"column":  "70"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "17",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "35",
						"column":  "74"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "89",
						"column":  "51"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_field.go",
						"line":  "73",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "96",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "51",
						"column":  "110"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "33",
						"column":  "116"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "69",
						"column":  "110"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body (*net/http/httptest.ResponseRecorder).Result net/http.CanonicalHeaderKey",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body"
				},
				{
					"name":  "(*net/http/httptest.ResponseRecorder).Result",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "99",
						"column":  "23"
					}
				},
				{
					"name":  "net/http.CanonicalHeaderKey",
					"site":  {
						"filename":  "recorder.go",
						"line":  "211",
						"column":  "32"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader (net/http.Header).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "32",
						"column":  "43"
					}
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "75",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader (net/http.Header).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "18",
						"column":  "43"
					}
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "75",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader (net/http.Header).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "47",
						"column":  "43"
					}
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "75",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader (net/http.Header).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader"
				},
				{
					"name":  "(net/http.Header).Get",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "75",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage github.com/onsi/gomega/matchers.formatHttpResponse (*net/http.body).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "52",
						"column":  "63"
					}
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "80",
						"column":  "3"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match (*net/http/httptest.ResponseRecorder).Result net/http.CanonicalHeaderKey",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match"
				},
				{
					"name":  "(*net/http/httptest.ResponseRecorder).Result",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "24",
						"column":  "18"
					}
				},
				{
					"name":  "net/http.CanonicalHeaderKey",
					"site":  {
						"filename":  "recorder.go",
						"line":  "211",
						"column":  "32"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.formatHttpResponse (*net/http.body).Close",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "56",
						"column":  "63"
					}
				},
				{
					"name":  "(*net/http.body).Close",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "80",
						"column":  "3"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "62",
						"column":  "38"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "43",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "30",
						"column":  "97"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "52",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "36",
						"column":  "106"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "75",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "23",
						"column":  "69"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "16",
						"column":  "112"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "27",
						"column":  "73"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "30",
						"column":  "83"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "22",
						"column":  "78"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "34",
						"column":  "63"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_value.go",
						"line":  "25",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "76",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match"
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "46",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "83",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "39",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "30",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "22",
						"column":  "61"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "39",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "44",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (net.pipeAddr).String",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(net.pipeAddr).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "or.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "or.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage",
					"site":  {
						"filename":  "or.go",
						"line":  "38",
						"column":  "55"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "78",
						"column":  "18"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "22",
						"column":  "87"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "97",
						"column":  "97"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "104",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "20",
						"column":  "88"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "65",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "37",
						"column":  "77"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_NETWORK",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match github.com/onsi/gomega/format.Object (*net/http.MaxBytesError).Error",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "25",
						"column":  "78"
					}
				},
				{
					"name":  "(*net/http.MaxBytesError).Error",
					"site":  {
						"filename":  "format.go",
						"line":  "263",
						"column":  "56"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gomega",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega.init github.com/onsi/gomega/internal.FetchDefaultDurationBundle github.com/onsi/gomega/internal.durationFromEnv os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/internal.FetchDefaultDurationBundle",
					"site":  {
						"filename":  "gomega_dsl.go",
						"line":  "47",
						"column":  "76"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.durationFromEnv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "27",
						"column":  "45"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "36",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.Build github.com/onsi/gomega/gexec.doBuild os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Build"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "33",
						"column":  "16"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "60",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.BuildIn github.com/onsi/gomega/gexec.doBuild os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "47",
						"column":  "16"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "60",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.BuildWithEnvironment github.com/onsi/gomega/gexec.doBuild os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "40",
						"column":  "16"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "60",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTest github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "79",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestIn github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "115",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "97",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTest github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "90",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "126",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "108",
						"column":  "22"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.doBuild os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild"
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "60",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.doCompileTest os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest"
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "168",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.doGet os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doGet"
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "147",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.getForTest github.com/onsi/gomega/gexec.doGet os.Environ",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.getForTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doGet",
					"site":  {
						"filename":  "build.go",
						"line":  "138",
						"column":  "14"
					}
				},
				{
					"name":  "os.Environ",
					"site":  {
						"filename":  "build.go",
						"line":  "147",
						"column":  "38"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gexec.init go/build.init go/build.defaultContext os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.init"
				},
				{
					"name":  "go/build.init"
				},
				{
					"name":  "go/build.defaultContext",
					"site":  {
						"filename":  "build.go",
						"line":  "287",
						"column":  "37"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "build.go",
						"line":  "337",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "test_server.go",
						"line":  "253",
						"column":  "19"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "246",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "314",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 google.golang.org/protobuf/protoadapt.MessageV2Of (google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of google.golang.org/protobuf/internal/impl.legacyWrapMessage google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.MessageV2Of",
					"site":  {
						"filename":  "handlers.go",
						"line":  "336",
						"column":  "52"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of",
					"site":  {
						"filename":  "convert.go",
						"line":  "30",
						"column":  "37"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyWrapMessage",
					"site":  {
						"filename":  "api_export.go",
						"line":  "134",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "29",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "56",
						"column":  "39"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "273",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "92",
						"column":  "42"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "140",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "57"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "182",
						"column":  "39"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "105",
						"column":  "43"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "156",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "80"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/protoadapt.MessageV2Of (google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of google.golang.org/protobuf/internal/impl.legacyWrapMessage google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.MessageV2Of",
					"site":  {
						"filename":  "handlers.go",
						"line":  "212",
						"column":  "54"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of",
					"site":  {
						"filename":  "convert.go",
						"line":  "30",
						"column":  "37"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyWrapMessage",
					"site":  {
						"filename":  "api_export.go",
						"line":  "134",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "29",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "56",
						"column":  "39"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "50",
						"column":  "37"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/protoadapt.MessageV2Of (google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of google.golang.org/protobuf/internal/impl.legacyWrapMessage google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.MessageV2Of",
					"site":  {
						"filename":  "handlers.go",
						"line":  "212",
						"column":  "54"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of",
					"site":  {
						"filename":  "convert.go",
						"line":  "30",
						"column":  "37"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyWrapMessage",
					"site":  {
						"filename":  "api_export.go",
						"line":  "134",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "29",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "56",
						"column":  "39"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp.init github.com/onsi/gomega.init github.com/onsi/gomega/internal.FetchDefaultDurationBundle github.com/onsi/gomega/internal.durationFromEnv os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/internal.FetchDefaultDurationBundle",
					"site":  {
						"filename":  "gomega_dsl.go",
						"line":  "47",
						"column":  "76"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.durationFromEnv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "27",
						"column":  "45"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "36",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/protoadapt.MessageV2Of (google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of google.golang.org/protobuf/internal/impl.legacyWrapMessage google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "test_server.go",
						"line":  "268",
						"column":  "4"
					}
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.MessageV2Of",
					"site":  {
						"filename":  "handlers.go",
						"line":  "212",
						"column":  "54"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of",
					"site":  {
						"filename":  "convert.go",
						"line":  "30",
						"column":  "37"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyWrapMessage",
					"site":  {
						"filename":  "api_export.go",
						"line":  "134",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageInfo",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "29",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "56",
						"column":  "39"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "554",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init google.golang.org/protobuf/runtime/protoimpl.init google.golang.org/protobuf/internal/impl.init google.golang.org/protobuf/internal/detrand.init google.golang.org/protobuf/internal/detrand.binaryHash os.Executable",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init"
				},
				{
					"name":  "google.golang.org/protobuf/runtime/protoimpl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/detrand.binaryHash",
					"site":  {
						"filename":  "rand.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "os.Executable",
					"site":  {
						"filename":  "rand.go",
						"line":  "42",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init#1 github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init#1"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "125",
						"column":  "60"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "554",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient"
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "ginkgo_parallel_client.go",
						"line":  "12",
						"column":  "14"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/gleak.init github.com/onsi/gomega.init github.com/onsi/gomega/internal.FetchDefaultDurationBundle github.com/onsi/gomega/internal.durationFromEnv os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/internal.FetchDefaultDurationBundle",
					"site":  {
						"filename":  "gomega_dsl.go",
						"line":  "47",
						"column":  "76"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.durationFromEnv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "27",
						"column":  "45"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "36",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/internal.FetchDefaultDurationBundle github.com/onsi/gomega/internal.durationFromEnv os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.FetchDefaultDurationBundle"
				},
				{
					"name":  "github.com/onsi/gomega/internal.durationFromEnv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "27",
						"column":  "45"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "36",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/internal.durationFromEnv os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.durationFromEnv"
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "duration_bundle.go",
						"line":  "36",
						"column":  "20"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.toString"
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "18",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "39",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "22",
						"column":  "61"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "38",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "43",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_READ_SYSTEM_STATE",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc google.golang.org/protobuf/internal/impl.legacyLoadFileDesc (google.golang.org/protobuf/internal/filedesc.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile google.golang.org/protobuf/reflect/protoregistry.init$1 os.Getenv",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.aberrantMessage).Descriptor",
					"site":  {
						"filename":  "encode.go",
						"line":  "159",
						"column":  "29"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.LegacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "510",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadMessageDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "91",
						"column":  "30"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyLoadFileDesc",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "142",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "legacy_file.go",
						"line":  "62",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Files).RegisterFile",
					"site":  {
						"filename":  "build.go",
						"line":  "112",
						"column":  "40"
					}
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoregistry.init$1",
					"site":  {
						"filename":  "registry.go",
						"line":  "130",
						"column":  "42"
					}
				},
				{
					"name":  "os.Getenv",
					"site":  {
						"filename":  "registry.go",
						"line":  "51",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.Interrupt (*github.com/onsi/gomega/gexec.Session).Interrupt (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Interrupt"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Interrupt",
					"site":  {
						"filename":  "session.go",
						"line":  "303",
						"column":  "20"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "167",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.Kill (*github.com/onsi/gomega/gexec.Session).Kill (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Kill"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Kill",
					"site":  {
						"filename":  "session.go",
						"line":  "261",
						"column":  "15"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "156",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Kill (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Kill",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "15"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "156",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.Signal (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Signal"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "289",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.Terminate (*github.com/onsi/gomega/gexec.Session).Terminate (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Terminate"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Terminate",
					"site":  {
						"filename":  "session.go",
						"line":  "275",
						"column":  "20"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "178",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Terminate (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Terminate",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "20"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "178",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Interrupt (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Interrupt"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "167",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Kill (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Kill"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "156",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal"
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_OPERATING_SYSTEM",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Terminate (*github.com/onsi/gomega/gexec.Session).Signal (*os.Process).Signal",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Terminate"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "178",
						"column":  "17"
					}
				},
				{
					"name":  "(*os.Process).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "190",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_SYSTEM_CALLS",
			"depPath":  "github.com/onsi/gomega/gexec.Start (*github.com/onsi/gomega/gexec.Session).monitorForExit (syscall.WaitStatus).Signal",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Start"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).monitorForExit",
					"site":  {
						"filename":  "session.go",
						"line":  "96",
						"column":  "3"
					}
				},
				{
					"name":  "(syscall.WaitStatus).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "202",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_SYSTEM_CALLS",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).monitorForExit (syscall.WaitStatus).Signal",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).monitorForExit"
				},
				{
					"name":  "(syscall.WaitStatus).Signal",
					"site":  {
						"filename":  "session.go",
						"line":  "202",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gomega",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega.init github.com/onsi/gomega/matchers.init golang.org/x/net/html/charset.init golang.org/x/text/encoding/htmlindex.init golang.org/x/text/language.init golang.org/x/text/language.init#1 golang.org/x/text/language.canonicalize (golang.org/x/text/internal/language.Language).Canonicalize golang.org/x/text/internal/language.normLang sort.Search",
			"path":  [
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "golang.org/x/net/html/charset.init"
				},
				{
					"name":  "golang.org/x/text/encoding/htmlindex.init"
				},
				{
					"name":  "golang.org/x/text/language.init"
				},
				{
					"name":  "golang.org/x/text/language.init#1"
				},
				{
					"name":  "golang.org/x/text/language.canonicalize",
					"site":  {
						"filename":  "match.go",
						"line":  "720",
						"column":  "27"
					}
				},
				{
					"name":  "(golang.org/x/text/internal/language.Language).Canonicalize",
					"site":  {
						"filename":  "language.go",
						"line":  "128",
						"column":  "44"
					}
				},
				{
					"name":  "golang.org/x/text/internal/language.normLang",
					"site":  {
						"filename":  "lookup.go",
						"line":  "50",
						"column":  "17"
					}
				},
				{
					"name":  "sort.Search",
					"site":  {
						"filename":  "lookup.go",
						"line":  "55",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gbytes",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gbytes.BufferReader github.com/onsi/gomega/gbytes.BufferReader$1 io.Copy",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gbytes.BufferReader"
				},
				{
					"name":  "github.com/onsi/gomega/gbytes.BufferReader$1",
					"site":  {
						"filename":  "buffer.go",
						"line":  "64",
						"column":  "2"
					}
				},
				{
					"name":  "io.Copy",
					"site":  {
						"filename":  "buffer.go",
						"line":  "65",
						"column":  "10"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gbytes",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gbytes",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gbytes.BufferReader$1 io.Copy",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gbytes.BufferReader$1"
				},
				{
					"name":  "io.Copy",
					"site":  {
						"filename":  "buffer.go",
						"line":  "65",
						"column":  "10"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gbytes",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gexec.init github.com/onsi/gomega.init github.com/onsi/gomega/matchers.init golang.org/x/net/html/charset.init golang.org/x/text/encoding/htmlindex.init golang.org/x/text/language.init golang.org/x/text/language.init#1 golang.org/x/text/language.canonicalize (golang.org/x/text/internal/language.Language).Canonicalize golang.org/x/text/internal/language.normLang sort.Search",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "golang.org/x/net/html/charset.init"
				},
				{
					"name":  "golang.org/x/text/encoding/htmlindex.init"
				},
				{
					"name":  "golang.org/x/text/language.init"
				},
				{
					"name":  "golang.org/x/text/language.init#1"
				},
				{
					"name":  "golang.org/x/text/language.canonicalize",
					"site":  {
						"filename":  "match.go",
						"line":  "720",
						"column":  "27"
					}
				},
				{
					"name":  "(golang.org/x/text/internal/language.Language).Canonicalize",
					"site":  {
						"filename":  "language.go",
						"line":  "128",
						"column":  "44"
					}
				},
				{
					"name":  "golang.org/x/text/internal/language.normLang",
					"site":  {
						"filename":  "lookup.go",
						"line":  "50",
						"column":  "17"
					}
				},
				{
					"name":  "sort.Search",
					"site":  {
						"filename":  "lookup.go",
						"line":  "55",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "test_server.go",
						"line":  "253",
						"column":  "19"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "246",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "314",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 google.golang.org/protobuf/proto.Marshal (google.golang.org/protobuf/proto.MarshalOptions).marshal (google.golang.org/protobuf/proto.MarshalOptions).marshalMessageSlow google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "google.golang.org/protobuf/proto.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "336",
						"column":  "29"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/proto.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "80",
						"column":  "38"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/proto.MarshalOptions).marshalMessageSlow",
					"site":  {
						"filename":  "encode.go",
						"line":  "168",
						"column":  "38"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "222",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "273",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "92",
						"column":  "42"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "handlers.go",
						"line":  "137",
						"column":  "30"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "57"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "182",
						"column":  "39"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "105",
						"column":  "43"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "handlers.go",
						"line":  "153",
						"column":  "30"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "80"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "handlers.go",
						"line":  "202",
						"column":  "30"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "50",
						"column":  "37"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "handlers.go",
						"line":  "137",
						"column":  "30"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp.init github.com/onsi/gomega.init github.com/onsi/gomega/matchers.init golang.org/x/net/html/charset.init golang.org/x/text/encoding/htmlindex.init golang.org/x/text/language.init golang.org/x/text/language.init#1 golang.org/x/text/language.canonicalize (golang.org/x/text/internal/language.Language).Canonicalize golang.org/x/text/internal/language.normLang sort.Search",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "golang.org/x/net/html/charset.init"
				},
				{
					"name":  "golang.org/x/text/encoding/htmlindex.init"
				},
				{
					"name":  "golang.org/x/text/language.init"
				},
				{
					"name":  "golang.org/x/text/language.init#1"
				},
				{
					"name":  "golang.org/x/text/language.canonicalize",
					"site":  {
						"filename":  "match.go",
						"line":  "720",
						"column":  "27"
					}
				},
				{
					"name":  "(golang.org/x/text/internal/language.Language).Canonicalize",
					"site":  {
						"filename":  "language.go",
						"line":  "128",
						"column":  "44"
					}
				},
				{
					"name":  "golang.org/x/text/internal/language.normLang",
					"site":  {
						"filename":  "lookup.go",
						"line":  "50",
						"column":  "17"
					}
				},
				{
					"name":  "sort.Search",
					"site":  {
						"filename":  "lookup.go",
						"line":  "55",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP net/http/httputil.DumpRequest io.Copy",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "net/http/httputil.DumpRequest",
					"site":  {
						"filename":  "test_server.go",
						"line":  "276",
						"column":  "42"
					}
				},
				{
					"name":  "io.Copy",
					"site":  {
						"filename":  "dump.go",
						"line":  "274",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (google.golang.org/protobuf/internal/filedesc.Builder).Build google.golang.org/protobuf/internal/filedesc.newRawFile (*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed google.golang.org/protobuf/internal/filedesc.getBuilder (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "build.go",
						"line":  "138",
						"column":  "24"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.newRawFile",
					"site":  {
						"filename":  "build.go",
						"line":  "105",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "30",
						"column":  "18"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.getBuilder",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "96",
						"column":  "18"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "506",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init github.com/onsi/gomega/ghttp/protobuf.init#1 github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (google.golang.org/protobuf/internal/filedesc.Builder).Build google.golang.org/protobuf/internal/filedesc.newRawFile (*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed google.golang.org/protobuf/internal/filedesc.getBuilder (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init#1"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "125",
						"column":  "60"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "build.go",
						"line":  "138",
						"column":  "24"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.newRawFile",
					"site":  {
						"filename":  "build.go",
						"line":  "105",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "30",
						"column":  "18"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.getBuilder",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "96",
						"column":  "18"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "506",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init#1 github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (google.golang.org/protobuf/internal/filedesc.Builder).Build google.golang.org/protobuf/internal/filedesc.newRawFile (*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed google.golang.org/protobuf/internal/filedesc.getBuilder (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init#1"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "125",
						"column":  "60"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filedesc.Builder).Build",
					"site":  {
						"filename":  "build.go",
						"line":  "138",
						"column":  "24"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.newRawFile",
					"site":  {
						"filename":  "build.go",
						"line":  "105",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/filedesc.File).unmarshalSeed",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "30",
						"column":  "18"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/filedesc.getBuilder",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "96",
						"column":  "18"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "desc_init.go",
						"line":  "506",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines",
					"site":  {
						"filename":  "ginkgo_parallel_client.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak.init github.com/onsi/gomega.init github.com/onsi/gomega/matchers.init golang.org/x/net/html/charset.init golang.org/x/text/encoding/htmlindex.init golang.org/x/text/language.init golang.org/x/text/language.init#1 golang.org/x/text/language.canonicalize (golang.org/x/text/internal/language.Language).Canonicalize golang.org/x/text/internal/language.normLang sort.Search",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "golang.org/x/net/html/charset.init"
				},
				{
					"name":  "golang.org/x/text/encoding/htmlindex.init"
				},
				{
					"name":  "golang.org/x/text/language.init"
				},
				{
					"name":  "golang.org/x/text/language.init#1"
				},
				{
					"name":  "golang.org/x/text/language.canonicalize",
					"site":  {
						"filename":  "match.go",
						"line":  "720",
						"column":  "27"
					}
				},
				{
					"name":  "(golang.org/x/text/internal/language.Language).Canonicalize",
					"site":  {
						"filename":  "language.go",
						"line":  "128",
						"column":  "44"
					}
				},
				{
					"name":  "golang.org/x/text/internal/language.normLang",
					"site":  {
						"filename":  "lookup.go",
						"line":  "50",
						"column":  "17"
					}
				},
				{
					"name":  "sort.Search",
					"site":  {
						"filename":  "lookup.go",
						"line":  "55",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match (*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "172",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "270",
						"column":  "27"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "270",
						"column":  "27"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace"
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "213",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseStack (*bufio.Reader).ReadString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack"
				},
				{
					"name":  "(*bufio.Reader).ReadString",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "120",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3 (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "307",
						"column":  "3"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "312",
						"column":  "44"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "312",
						"column":  "44"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1 github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "408",
						"column":  "50"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2 errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2"
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "443",
						"column":  "17"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3 (*github.com/onsi/gomega/internal.AsyncAssertion).match$2 errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "478",
						"column":  "110"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "443",
						"column":  "17"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher$1 github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "367",
						"column":  "46"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError"
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot (*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "151",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match"
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "497",
						"column":  "51"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher$1 github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "365",
						"column":  "2"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "367",
						"column":  "46"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/internal.AsPollingSignalError errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues"
				},
				{
					"name":  "github.com/onsi/gomega/internal.AsPollingSignalError",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "174",
						"column":  "34"
					}
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "polling_signal_error.go",
						"line":  "98",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gutil",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll"
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal/gutil",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "85",
						"column":  "43"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse"
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "81",
						"column":  "29"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/matchers.init golang.org/x/net/html/charset.init golang.org/x/text/encoding/htmlindex.init golang.org/x/text/language.init golang.org/x/text/language.init#1 golang.org/x/text/language.canonicalize (golang.org/x/text/internal/language.Language).Canonicalize golang.org/x/text/internal/language.normLang sort.Search",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "golang.org/x/net/html/charset.init"
				},
				{
					"name":  "golang.org/x/text/encoding/htmlindex.init"
				},
				{
					"name":  "golang.org/x/text/language.init"
				},
				{
					"name":  "golang.org/x/text/language.init#1"
				},
				{
					"name":  "golang.org/x/text/language.canonicalize",
					"site":  {
						"filename":  "match.go",
						"line":  "720",
						"column":  "27"
					}
				},
				{
					"name":  "(golang.org/x/text/internal/language.Language).Canonicalize",
					"site":  {
						"filename":  "language.go",
						"line":  "128",
						"column":  "44"
					}
				},
				{
					"name":  "golang.org/x/text/internal/language.normLang",
					"site":  {
						"filename":  "lookup.go",
						"line":  "50",
						"column":  "17"
					}
				},
				{
					"name":  "sort.Search",
					"site":  {
						"filename":  "lookup.go",
						"line":  "55",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/matchers.parseXmlContent (*encoding/xml.Decoder).Token (*encoding/xml.Decoder).rawToken (*encoding/xml.Decoder).getc (*bufio.Reader).ReadByte",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.parseXmlContent"
				},
				{
					"name":  "(*encoding/xml.Decoder).Token",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "68",
						"column":  "24"
					}
				},
				{
					"name":  "(*encoding/xml.Decoder).rawToken",
					"site":  {
						"filename":  "xml.go",
						"line":  "284",
						"column":  "25"
					}
				},
				{
					"name":  "(*encoding/xml.Decoder).getc",
					"site":  {
						"filename":  "xml.go",
						"line":  "562",
						"column":  "17"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadByte",
					"site":  {
						"filename":  "xml.go",
						"line":  "911",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.toString"
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "18",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match"
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "22",
						"column":  "14"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "38",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "96",
						"column":  "14"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "85",
						"column":  "43"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "20",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "96",
						"column":  "14"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "85",
						"column":  "43"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "56",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "96",
						"column":  "14"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "85",
						"column":  "43"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body (*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1 github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body$1",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "96",
						"column":  "14"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "85",
						"column":  "43"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "52",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "81",
						"column":  "29"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/internal/gutil.ReadAll io.ReadAll",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "56",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal/gutil.ReadAll",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "81",
						"column":  "29"
					}
				},
				{
					"name":  "io.ReadAll",
					"site":  {
						"filename":  "post_ioutil.go",
						"line":  "21",
						"column":  "19"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match errors.Is",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match"
				},
				{
					"name":  "errors.Is",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "33",
						"column":  "15"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "39",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match github.com/onsi/gomega/matchers.parseXmlContent (*encoding/xml.Decoder).Token (*encoding/xml.Decoder).rawToken (*encoding/xml.Decoder).getc (*bufio.Reader).ReadByte",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.parseXmlContent",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "(*encoding/xml.Decoder).Token",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "68",
						"column":  "24"
					}
				},
				{
					"name":  "(*encoding/xml.Decoder).rawToken",
					"site":  {
						"filename":  "xml.go",
						"line":  "284",
						"column":  "25"
					}
				},
				{
					"name":  "(*encoding/xml.Decoder).getc",
					"site":  {
						"filename":  "xml.go",
						"line":  "562",
						"column":  "17"
					}
				},
				{
					"name":  "(*bufio.Reader).ReadByte",
					"site":  {
						"filename":  "xml.go",
						"line":  "911",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "38",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "43",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage google.golang.org/protobuf/internal/order.RangeFields (*sync.Pool).Get",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/order.RangeFields",
					"site":  {
						"filename":  "encode.go",
						"line":  "179",
						"column":  "19"
					}
				},
				{
					"name":  "(*sync.Pool).Get",
					"site":  {
						"filename":  "range.go",
						"line":  "40",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNANALYZED",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage errors.As",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage"
				},
				{
					"name":  "errors.As",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "34",
						"column":  "14"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gomega",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega.init github.com/google/go-cmp/cmp.init regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.init"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "options.go",
						"line":  "257",
						"column":  "34"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.IndentString github.com/onsi/gomega/format.indentString (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.IndentString"
				},
				{
					"name":  "github.com/onsi/gomega/format.indentString",
					"site":  {
						"filename":  "format.go",
						"line":  "272",
						"column":  "21"
					}
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "format.go",
						"line":  "281",
						"column":  "22"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Message"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.MessageWithDiff github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.MessageWithDiff"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "format.go",
						"line":  "161",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Object"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.formatInterface github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatInterface"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "482",
						"column":  "64"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.formatMap github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatMap"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "446",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.formatSlice github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatSlice"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "426",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.formatStruct github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatStruct"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "468",
						"column":  "72"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatValue"
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.indentString (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.indentString"
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "format.go",
						"line":  "281",
						"column":  "22"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings"
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gbytes",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gbytes.Say regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gbytes.Say"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "say_matcher.go",
						"line":  "45",
						"column":  "25"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gbytes",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gbytes",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gbytes.Buffer).Detect regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gbytes.Buffer).Detect"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "buffer.go",
						"line":  "187",
						"column":  "26"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gbytes",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate github.com/onsi/gomega/gcustom.ParseTemplate (*text/template.Template).Parse (*text/template.Template).AddParseTree (*text/template.Template).associate text/template/parse.IsEmptyTree (*text/template/parse.ChainNode).String (*text/template/parse.ChainNode).writeTo (*strings.Builder).WriteByte (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "121",
						"column":  "33"
					}
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "153",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gcustom.ParseTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "188",
						"column":  "62"
					}
				},
				{
					"name":  "(*text/template.Template).Parse",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "38",
						"column":  "10"
					}
				},
				{
					"name":  "(*text/template.Template).AddParseTree",
					"site":  {
						"filename":  "template.go",
						"line":  "217",
						"column":  "30"
					}
				},
				{
					"name":  "(*text/template.Template).associate",
					"site":  {
						"filename":  "template.go",
						"line":  "138",
						"column":  "16"
					}
				},
				{
					"name":  "text/template/parse.IsEmptyTree",
					"site":  {
						"filename":  "template.go",
						"line":  "231",
						"column":  "61"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).String",
					"site":  {
						"filename":  "parse.go",
						"line":  "291",
						"column":  "36"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).writeTo",
					"site":  {
						"filename":  "node.go",
						"line":  "555",
						"column":  "11"
					}
				},
				{
					"name":  "(*strings.Builder).WriteByte",
					"site":  {
						"filename":  "node.go",
						"line":  "561",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "98",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher$1 github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher$1"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "107",
						"column":  "107"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gcustom.ParseTemplate (*text/template.Template).Parse (*text/template.Template).AddParseTree (*text/template.Template).associate text/template/parse.IsEmptyTree (*text/template/parse.ChainNode).String (*text/template/parse.ChainNode).writeTo (*strings.Builder).WriteByte (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.ParseTemplate"
				},
				{
					"name":  "(*text/template.Template).Parse",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "38",
						"column":  "10"
					}
				},
				{
					"name":  "(*text/template.Template).AddParseTree",
					"site":  {
						"filename":  "template.go",
						"line":  "217",
						"column":  "30"
					}
				},
				{
					"name":  "(*text/template.Template).associate",
					"site":  {
						"filename":  "template.go",
						"line":  "138",
						"column":  "16"
					}
				},
				{
					"name":  "text/template/parse.IsEmptyTree",
					"site":  {
						"filename":  "template.go",
						"line":  "231",
						"column":  "61"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).String",
					"site":  {
						"filename":  "parse.go",
						"line":  "291",
						"column":  "36"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).writeTo",
					"site":  {
						"filename":  "node.go",
						"line":  "555",
						"column":  "11"
					}
				},
				{
					"name":  "(*strings.Builder).WriteByte",
					"site":  {
						"filename":  "node.go",
						"line":  "561",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "98",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gcustom.formatObject github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.formatObject"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "25",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gcustom.init github.com/onsi/gomega/gcustom.ParseTemplate (*text/template.Template).Parse (*text/template.Template).AddParseTree (*text/template.Template).associate text/template/parse.IsEmptyTree (*text/template/parse.ChainNode).String (*text/template/parse.ChainNode).writeTo (*strings.Builder).WriteByte (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.init"
				},
				{
					"name":  "github.com/onsi/gomega/gcustom.ParseTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "18",
						"column":  "50"
					}
				},
				{
					"name":  "(*text/template.Template).Parse",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "38",
						"column":  "10"
					}
				},
				{
					"name":  "(*text/template.Template).AddParseTree",
					"site":  {
						"filename":  "template.go",
						"line":  "217",
						"column":  "30"
					}
				},
				{
					"name":  "(*text/template.Template).associate",
					"site":  {
						"filename":  "template.go",
						"line":  "138",
						"column":  "16"
					}
				},
				{
					"name":  "text/template/parse.IsEmptyTree",
					"site":  {
						"filename":  "template.go",
						"line":  "231",
						"column":  "61"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).String",
					"site":  {
						"filename":  "parse.go",
						"line":  "291",
						"column":  "36"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).writeTo",
					"site":  {
						"filename":  "node.go",
						"line":  "555",
						"column":  "11"
					}
				},
				{
					"name":  "(*strings.Builder).WriteByte",
					"site":  {
						"filename":  "node.go",
						"line":  "561",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "98",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute (*text/template.state).walk (*strings.Builder).Write (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "224",
						"column":  "32"
					}
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				},
				{
					"name":  "(*text/template.state).walk",
					"site":  {
						"filename":  "exec.go",
						"line":  "224",
						"column":  "12"
					}
				},
				{
					"name":  "(*strings.Builder).Write",
					"site":  {
						"filename":  "exec.go",
						"line":  "287",
						"column":  "26"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "90",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute (*text/template.state).walk (*strings.Builder).Write (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "230",
						"column":  "32"
					}
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				},
				{
					"name":  "(*text/template.state).walk",
					"site":  {
						"filename":  "exec.go",
						"line":  "224",
						"column":  "12"
					}
				},
				{
					"name":  "(*strings.Builder).Write",
					"site":  {
						"filename":  "exec.go",
						"line":  "287",
						"column":  "26"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "90",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate github.com/onsi/gomega/gcustom.ParseTemplate (*text/template.Template).Parse (*text/template.Template).AddParseTree (*text/template.Template).associate text/template/parse.IsEmptyTree (*text/template/parse.ChainNode).String (*text/template/parse.ChainNode).writeTo (*strings.Builder).WriteByte (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "153",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gcustom.ParseTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "188",
						"column":  "62"
					}
				},
				{
					"name":  "(*text/template.Template).Parse",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "38",
						"column":  "10"
					}
				},
				{
					"name":  "(*text/template.Template).AddParseTree",
					"site":  {
						"filename":  "template.go",
						"line":  "217",
						"column":  "30"
					}
				},
				{
					"name":  "(*text/template.Template).associate",
					"site":  {
						"filename":  "template.go",
						"line":  "138",
						"column":  "16"
					}
				},
				{
					"name":  "text/template/parse.IsEmptyTree",
					"site":  {
						"filename":  "template.go",
						"line":  "231",
						"column":  "61"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).String",
					"site":  {
						"filename":  "parse.go",
						"line":  "291",
						"column":  "36"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).writeTo",
					"site":  {
						"filename":  "node.go",
						"line":  "555",
						"column":  "11"
					}
				},
				{
					"name":  "(*strings.Builder).WriteByte",
					"site":  {
						"filename":  "node.go",
						"line":  "561",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "98",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate github.com/onsi/gomega/gcustom.ParseTemplate (*text/template.Template).Parse (*text/template.Template).AddParseTree (*text/template.Template).associate text/template/parse.IsEmptyTree (*text/template/parse.ChainNode).String (*text/template/parse.ChainNode).writeTo (*strings.Builder).WriteByte (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).WithTemplate"
				},
				{
					"name":  "github.com/onsi/gomega/gcustom.ParseTemplate",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "188",
						"column":  "62"
					}
				},
				{
					"name":  "(*text/template.Template).Parse",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "38",
						"column":  "10"
					}
				},
				{
					"name":  "(*text/template.Template).AddParseTree",
					"site":  {
						"filename":  "template.go",
						"line":  "217",
						"column":  "30"
					}
				},
				{
					"name":  "(*text/template.Template).associate",
					"site":  {
						"filename":  "template.go",
						"line":  "138",
						"column":  "16"
					}
				},
				{
					"name":  "text/template/parse.IsEmptyTree",
					"site":  {
						"filename":  "template.go",
						"line":  "231",
						"column":  "61"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).String",
					"site":  {
						"filename":  "parse.go",
						"line":  "291",
						"column":  "36"
					}
				},
				{
					"name":  "(*text/template/parse.ChainNode).writeTo",
					"site":  {
						"filename":  "node.go",
						"line":  "555",
						"column":  "11"
					}
				},
				{
					"name":  "(*strings.Builder).WriteByte",
					"site":  {
						"filename":  "node.go",
						"line":  "561",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "98",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute (*text/template.state).walk (*strings.Builder).Write (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage"
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				},
				{
					"name":  "(*text/template.state).walk",
					"site":  {
						"filename":  "exec.go",
						"line":  "224",
						"column":  "12"
					}
				},
				{
					"name":  "(*strings.Builder).Write",
					"site":  {
						"filename":  "exec.go",
						"line":  "287",
						"column":  "26"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "90",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gexec.init github.com/onsi/gomega.init github.com/google/go-cmp/cmp.init regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.init"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "options.go",
						"line":  "257",
						"column":  "34"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "68",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "78",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "test_server.go",
						"line":  "253",
						"column":  "19"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "246",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "314",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 google.golang.org/protobuf/proto.Marshal (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "google.golang.org/protobuf/proto.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "336",
						"column":  "29"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect",
					"site":  {
						"filename":  "encode.go",
						"line":  "80",
						"column":  "58"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "273",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "92",
						"column":  "42"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "140",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "57"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "182",
						"column":  "39"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "105",
						"column":  "43"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "156",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "80"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/proto.Equal (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "google.golang.org/protobuf/proto.Equal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "215",
						"column":  "31"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect",
					"site":  {
						"filename":  "equal.go",
						"line":  "49",
						"column":  "22"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 net/url.ParseQuery net/url.parseQuery net/url.QueryUnescape net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "net/url.ParseQuery",
					"site":  {
						"filename":  "handlers.go",
						"line":  "58",
						"column":  "33"
					}
				},
				{
					"name":  "net/url.parseQuery",
					"site":  {
						"filename":  "url.go",
						"line":  "928",
						"column":  "19"
					}
				},
				{
					"name":  "net/url.QueryUnescape",
					"site":  {
						"filename":  "url.go",
						"line":  "944",
						"column":  "29"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "184",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/proto.Equal (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "google.golang.org/protobuf/proto.Equal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "215",
						"column":  "31"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect",
					"site":  {
						"filename":  "equal.go",
						"line":  "49",
						"column":  "22"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp.init google.golang.org/protobuf/proto.init google.golang.org/protobuf/reflect/protoreflect.init google.golang.org/protobuf/reflect/protoreflect.typeOf",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.init"
				},
				{
					"name":  "google.golang.org/protobuf/proto.init"
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoreflect.init"
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoreflect.typeOf",
					"site":  {
						"filename":  "value_unsafe_go121.go",
						"line":  "25",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 google.golang.org/protobuf/proto.Equal (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "test_server.go",
						"line":  "268",
						"column":  "4"
					}
				},
				{
					"name":  "google.golang.org/protobuf/proto.Equal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "215",
						"column":  "31"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect",
					"site":  {
						"filename":  "equal.go",
						"line":  "49",
						"column":  "22"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "287",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting (*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot",
					"site":  {
						"filename":  "handlers.go",
						"line":  "166",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension (*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor (*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow (*google.golang.org/protobuf/internal/impl.ExtensionInfo).initToLegacy (*google.golang.org/protobuf/internal/impl.MessageInfo).New (*google.golang.org/protobuf/internal/impl.MessageInfo).MessageOf google.golang.org/protobuf/internal/impl.pointerOfIface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor",
					"site":  {
						"filename":  "registry.go",
						"line":  "542",
						"column":  "25"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow",
					"site":  {
						"filename":  "extension.go",
						"line":  "112",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).initToLegacy",
					"site":  {
						"filename":  "extension.go",
						"line":  "138",
						"column":  "19"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).New",
					"site":  {
						"filename":  "legacy_extension.go",
						"line":  "26",
						"column":  "15"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).MessageOf",
					"site":  {
						"filename":  "message.go",
						"line":  "230",
						"column":  "21"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.pointerOfIface",
					"site":  {
						"filename":  "message_reflect.go",
						"line":  "401",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init google.golang.org/protobuf/reflect/protoreflect.init google.golang.org/protobuf/reflect/protoreflect.typeOf",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init"
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoreflect.init"
				},
				{
					"name":  "google.golang.org/protobuf/reflect/protoreflect.typeOf",
					"site":  {
						"filename":  "value_unsafe_go121.go",
						"line":  "25",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init#1 github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension (*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor (*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow (*google.golang.org/protobuf/internal/impl.ExtensionInfo).initToLegacy (*google.golang.org/protobuf/internal/impl.MessageInfo).New (*google.golang.org/protobuf/internal/impl.MessageInfo).MessageOf google.golang.org/protobuf/internal/impl.pointerOfIface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init#1"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "125",
						"column":  "60"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor",
					"site":  {
						"filename":  "registry.go",
						"line":  "542",
						"column":  "25"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow",
					"site":  {
						"filename":  "extension.go",
						"line":  "112",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).initToLegacy",
					"site":  {
						"filename":  "extension.go",
						"line":  "138",
						"column":  "19"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).New",
					"site":  {
						"filename":  "legacy_extension.go",
						"line":  "26",
						"column":  "15"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).MessageOf",
					"site":  {
						"filename":  "message.go",
						"line":  "230",
						"column":  "21"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.pointerOfIface",
					"site":  {
						"filename":  "message_reflect.go",
						"line":  "401",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect"
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).Reset (*google.golang.org/protobuf/internal/impl.messageState).StoreMessageInfo",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).Reset"
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).StoreMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "38",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect (*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).ProtoReflect",
					"site":  {
						"filename":  "encode.go",
						"line":  "90",
						"column":  "32"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.messageState).LoadMessageInfo",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "52",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.G"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.HaveLeaked github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.HaveLeaked"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "138",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient github.com/onsi/gomega/gleak.Goroutines github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.IgnoreGinkgoParallelClient"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.Goroutines",
					"site":  {
						"filename":  "ginkgo_parallel_client.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines",
					"site":  {
						"filename":  "goroutines.go",
						"line":  "13",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.goids (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.goids"
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "util.go",
						"line":  "40",
						"column":  "20"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak.init github.com/onsi/gomega.init github.com/google/go-cmp/cmp.init regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.init"
				},
				{
					"name":  "github.com/onsi/gomega.init"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.init"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "options.go",
						"line":  "257",
						"column":  "34"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).FailureMessage (*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "184",
						"column":  "103"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "201",
						"column":  "18"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "164",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).NegatedFailureMessage (*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "189",
						"column":  "107"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "201",
						"column":  "18"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "277",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).listGoroutines"
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "201",
						"column":  "18"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "32",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "49",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "33",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "23",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "78",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "58",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Current github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Current"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "101",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.Goroutines github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.Goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "94",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.goroutines github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.goroutines"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "108",
						"column":  "19"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace"
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "goroutine",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/gleak/goroutine.parseStack github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace (*bufio.Reader).Peek (*bufio.Reader).fill (*crypto/tls.Conn).Read (*crypto/tls.Conn).handlePostHandshakeMessage (*crypto/tls.Conn).handleRenegotiation (*crypto/tls.Conn).clientHandshake (*crypto/tls.clientHandshakeState).handshake (*crypto/tls.clientHandshakeState).doFullHandshake (*crypto/tls.Conn).verifyServerCertificate (*crypto/x509.Certificate).Verify (*crypto/x509.Certificate).isValid crypto/x509.forEachSAN (*crypto/x509.Certificate).isValid$1 net/url.Parse (*net/url.URL).setFragment net/url.unescape (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseStack"
				},
				{
					"name":  "github.com/onsi/gomega/gleak/goroutine.parseGoroutineBacktrace",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "126",
						"column":  "55"
					}
				},
				{
					"name":  "(*bufio.Reader).Peek",
					"site":  {
						"filename":  "goroutine.go",
						"line":  "202",
						"column":  "24"
					}
				},
				{
					"name":  "(*bufio.Reader).fill",
					"site":  {
						"filename":  "bufio.go",
						"line":  "151",
						"column":  "9"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).Read",
					"site":  {
						"filename":  "bufio.go",
						"line":  "113",
						"column":  "22"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handlePostHandshakeMessage",
					"site":  {
						"filename":  "conn.go",
						"line":  "1373",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).handleRenegotiation",
					"site":  {
						"filename":  "conn.go",
						"line":  "1285",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).clientHandshake",
					"site":  {
						"filename":  "conn.go",
						"line":  "1275",
						"column":  "39"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).handshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "276",
						"column":  "24"
					}
				},
				{
					"name":  "(*crypto/tls.clientHandshakeState).doFullHandshake",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "495",
						"column":  "31"
					}
				},
				{
					"name":  "(*crypto/tls.Conn).verifyServerCertificate",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "578",
						"column":  "38"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).Verify",
					"site":  {
						"filename":  "handshake_client.go",
						"line":  "995",
						"column":  "42"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid",
					"site":  {
						"filename":  "verify.go",
						"line":  "790",
						"column":  "17"
					}
				},
				{
					"name":  "crypto/x509.forEachSAN",
					"site":  {
						"filename":  "verify.go",
						"line":  "609",
						"column":  "21"
					}
				},
				{
					"name":  "(*crypto/x509.Certificate).isValid$1",
					"site":  {
						"filename":  "parser.go",
						"line":  "365",
						"column":  "21"
					}
				},
				{
					"name":  "net/url.Parse",
					"site":  {
						"filename":  "verify.go",
						"line":  "640",
						"column":  "27"
					}
				},
				{
					"name":  "(*net/url.URL).setFragment",
					"site":  {
						"filename":  "url.go",
						"line":  "476",
						"column":  "26"
					}
				},
				{
					"name":  "net/url.unescape",
					"site":  {
						"filename":  "url.go",
						"line":  "738",
						"column":  "23"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "url.go",
						"line":  "254",
						"column":  "8"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak/goroutine",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "222",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "226",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "155",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "160",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "116",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "pointer.go",
						"line":  "39",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3 (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "307",
						"column":  "3"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1 github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "412",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "458",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3 (*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "478",
						"column":  "110"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "458",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "76"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage",
					"site":  {
						"filename":  "assertion.go",
						"line":  "101",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetError (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetError"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "135",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "assertion.go",
						"line":  "152",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "151",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "403",
						"column":  "46"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "197",
						"column":  "159"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/matchers.appendMissingElements github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.appendMissingElements"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "148",
						"column":  "16"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.extractField"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/matchers.formatHttpResponse (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse"
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "89",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/matchers.init github.com/google/go-cmp/cmp.init regexp.MustCompile regexp.Compile regexp.compile regexp.onePassPrefix (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.init"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.init"
				},
				{
					"name":  "regexp.MustCompile",
					"site":  {
						"filename":  "options.go",
						"line":  "257",
						"column":  "34"
					}
				},
				{
					"name":  "regexp.Compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "317",
						"column":  "24"
					}
				},
				{
					"name":  "regexp.compile",
					"site":  {
						"filename":  "regexp.go",
						"line":  "137",
						"column":  "16"
					}
				},
				{
					"name":  "regexp.onePassPrefix",
					"site":  {
						"filename":  "regexp.go",
						"line":  "205",
						"column":  "73"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "onepass.go",
						"line":  "60",
						"column":  "16"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.toString"
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage",
					"site":  {
						"filename":  "and.go",
						"line":  "30",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "and.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "and.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "32",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "36",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "17",
						"column":  "90"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "47",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage github.com/google/go-cmp/cmp.Diff (*github.com/google/go-cmp/cmp.defaultReporter).String (github.com/google/go-cmp/cmp.formatOptions).FormatDiff (github.com/google/go-cmp/cmp.formatOptions).FormatDiffSlice strings.Map (*strings.Builder).Grow (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.Diff",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "44",
						"column":  "72"
					}
				},
				{
					"name":  "(*github.com/google/go-cmp/cmp.defaultReporter).String",
					"site":  {
						"filename":  "compare.go",
						"line":  "132",
						"column":  "15"
					}
				},
				{
					"name":  "(github.com/google/go-cmp/cmp.formatOptions).FormatDiff",
					"site":  {
						"filename":  "report.go",
						"line":  "45",
						"column":  "36"
					}
				},
				{
					"name":  "(github.com/google/go-cmp/cmp.formatOptions).FormatDiffSlice",
					"site":  {
						"filename":  "report_compare.go",
						"line":  "108",
						"column":  "30"
					}
				},
				{
					"name":  "strings.Map",
					"site":  {
						"filename":  "report_slices.go",
						"line":  "200",
						"column":  "28"
					}
				},
				{
					"name":  "(*strings.Builder).Grow",
					"site":  {
						"filename":  "strings.go",
						"line":  "504",
						"column":  "9"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "78",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "48",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "42",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "24",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "17",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "28",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "40",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "44",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "15",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "18",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "39",
						"column":  "105"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "22",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "60",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "19",
						"column":  "80"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "34",
						"column":  "76"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "27",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "138",
						"column":  "17"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "21",
						"column":  "100"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "152",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "169",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "20",
						"column":  "105"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "173",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "38",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "17",
						"column":  "106"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "18",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "25",
						"column":  "71"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "18",
						"column":  "101"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "29",
						"column":  "75"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "59",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "17",
						"column":  "17"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "64",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match (*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "55",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "15",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "81",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "31",
						"column":  "70"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "17",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "35",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "89",
						"column":  "51"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match github.com/onsi/gomega/matchers.extractField github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_field.go",
						"line":  "73",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_field.go",
						"line":  "32",
						"column":  "99"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "96",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "51",
						"column":  "110"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "33",
						"column":  "116"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "69",
						"column":  "110"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "101",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage github.com/onsi/gomega/format.IndentString github.com/onsi/gomega/format.indentString (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.IndentString",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "42",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.indentString",
					"site":  {
						"filename":  "format.go",
						"line":  "272",
						"column":  "21"
					}
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "format.go",
						"line":  "281",
						"column":  "22"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "18",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.IndentString github.com/onsi/gomega/format.indentString (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.IndentString",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "57",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.indentString",
					"site":  {
						"filename":  "format.go",
						"line":  "272",
						"column":  "21"
					}
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "format.go",
						"line":  "281",
						"column":  "22"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage github.com/onsi/gomega/matchers.formatHttpResponse (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "52",
						"column":  "63"
					}
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "89",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "26",
						"column":  "130"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.formatHttpResponse (*strings.Builder).WriteString (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "56",
						"column":  "63"
					}
				},
				{
					"name":  "(*strings.Builder).WriteString",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "89",
						"column":  "15"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "115",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "62",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "43",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "18",
						"column":  "83"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "52",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "19",
						"column":  "92"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "75",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "23",
						"column":  "69"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "16",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "27",
						"column":  "73"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "30",
						"column":  "83"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "22",
						"column":  "78"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "34",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "15",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_value.go",
						"line":  "25",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "76",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "25",
						"column":  "73"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "83",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "34",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "39",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "44",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "30",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "16",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "22",
						"column":  "61"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "52",
						"column":  "29"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "38",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "43",
						"column":  "64"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/matchers.toString (google.golang.org/protobuf/reflect/protoreflect.Value).String (google.golang.org/protobuf/reflect/protoreflect.Value).getString",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.toString",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "66",
						"column":  "30"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/reflect/protoreflect.Value).getString",
					"site":  {
						"filename":  "value_union.go",
						"line":  "314",
						"column":  "21"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "or.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "or.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage",
					"site":  {
						"filename":  "or.go",
						"line":  "38",
						"column":  "55"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "78",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "22",
						"column":  "87"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "97",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "104",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "20",
						"column":  "88"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "65",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "37",
						"column":  "77"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_UNSAFE_POINTER",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue github.com/onsi/gomega/format.truncateLongStrings (*strings.Builder).WriteRune (*strings.Builder).copyCheck",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "25",
						"column":  "78"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.truncateLongStrings",
					"site":  {
						"filename":  "format.go",
						"line":  "339",
						"column":  "44"
					}
				},
				{
					"name":  "(*strings.Builder).WriteRune",
					"site":  {
						"filename":  "format.go",
						"line":  "233",
						"column":  "17"
					}
				},
				{
					"name":  "(*strings.Builder).copyCheck",
					"site":  {
						"filename":  "builder.go",
						"line":  "106",
						"column":  "13"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Message"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.MessageWithDiff github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.MessageWithDiff"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "format.go",
						"line":  "161",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.Object"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.formatInterface github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatInterface"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "482",
						"column":  "64"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.formatMap (reflect.Value).MapIndex",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatMap"
				},
				{
					"name":  "(reflect.Value).MapIndex",
					"site":  {
						"filename":  "format.go",
						"line":  "445",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.formatSlice github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatSlice"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "426",
						"column":  "26"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.formatStruct github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatStruct"
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "468",
						"column":  "72"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "format",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/format.formatValue"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/format",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gcustom.MakeMatcher$1",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.MakeMatcher$1"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gcustom.formatObject github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.formatObject"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "25",
						"column":  "22"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gcustom.init text/template.init",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gcustom.init"
				},
				{
					"name":  "text/template.init"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).FailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "224",
						"column":  "32"
					}
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage (github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "230",
						"column":  "32"
					}
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gcustom",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage (*text/template.Template).Execute (*text/template.Template).execute",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gcustom.CustomGomegaMatcher).renderTemplateMessage"
				},
				{
					"name":  "(*text/template.Template).Execute",
					"site":  {
						"filename":  "make_matcher.go",
						"line":  "265",
						"column":  "34"
					}
				},
				{
					"name":  "(*text/template.Template).execute",
					"site":  {
						"filename":  "exec.go",
						"line":  "207",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gcustom",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gexec.KillAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.KillAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "232",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gexec.TerminateAndWait (*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.TerminateAndWait"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "247",
						"column":  "27"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).Wait (*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).Wait"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should",
					"site":  {
						"filename":  "session.go",
						"line":  "144",
						"column":  "47"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "68",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "78",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "test_server.go",
						"line":  "253",
						"column":  "19"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWith$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "246",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1 encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncodedPtr$1"
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "313",
						"column":  "28"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1 google.golang.org/protobuf/protoadapt.MessageV2Of (google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of google.golang.org/protobuf/internal/impl.legacyWrapMessage (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithProto$1"
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.MessageV2Of",
					"site":  {
						"filename":  "handlers.go",
						"line":  "336",
						"column":  "52"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).ProtoMessageV2Of",
					"site":  {
						"filename":  "convert.go",
						"line":  "30",
						"column":  "37"
					}
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.legacyWrapMessage",
					"site":  {
						"filename":  "api_export.go",
						"line":  "134",
						"column":  "26"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "legacy_message.go",
						"line":  "30",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithPtr$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "273",
						"column":  "33"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBasicAuth$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "92",
						"column":  "42"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyBody$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "140",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyContentType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "70",
						"column":  "57"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyForm$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "182",
						"column":  "39"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHeader$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "105",
						"column":  "43"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyHost$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "125",
						"column":  "36"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSON$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "156",
						"column":  "32"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyMimeType$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "78",
						"column":  "80"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 reflect.New",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1"
				},
				{
					"name":  "reflect.New",
					"site":  {
						"filename":  "handlers.go",
						"line":  "207",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1 (*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyRequest$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should",
					"site":  {
						"filename":  "handlers.go",
						"line":  "50",
						"column":  "37"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp.CombineHandlers$1 (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 reflect.New",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.CombineHandlers$1"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "handlers.go",
						"line":  "38",
						"column":  "11"
					}
				},
				{
					"name":  "reflect.New",
					"site":  {
						"filename":  "handlers.go",
						"line":  "207",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded (github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.RespondWithJSONEncoded"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded",
					"site":  {
						"filename":  "handlers.go",
						"line":  "416",
						"column":  "66"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "286",
						"column":  "27"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.VerifyJSONRepresenting"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting",
					"site":  {
						"filename":  "handlers.go",
						"line":  "392",
						"column":  "66"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "165",
						"column":  "27"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp.init google.golang.org/protobuf/protoadapt.init google.golang.org/protobuf/runtime/protoimpl.init google.golang.org/protobuf/internal/impl.init",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp.init"
				},
				{
					"name":  "google.golang.org/protobuf/protoadapt.init"
				},
				{
					"name":  "google.golang.org/protobuf/runtime/protoimpl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.init"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP (github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1 reflect.New",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp.Server).ServeHTTP"
				},
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyProtoRepresenting$1",
					"site":  {
						"filename":  "test_server.go",
						"line":  "268",
						"column":  "4"
					}
				},
				{
					"name":  "reflect.New",
					"site":  {
						"filename":  "handlers.go",
						"line":  "207",
						"column":  "33"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).RespondWithJSONEncoded"
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "286",
						"column":  "27"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "ghttp",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/ghttp.GHTTPWithGomega).VerifyJSONRepresenting"
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "handlers.go",
						"line":  "165",
						"column":  "27"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension (*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor (*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow (*google.golang.org/protobuf/internal/impl.ExtensionInfo).initFromLegacy reflect.Zero",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor",
					"site":  {
						"filename":  "registry.go",
						"line":  "542",
						"column":  "25"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow",
					"site":  {
						"filename":  "extension.go",
						"line":  "112",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).initFromLegacy",
					"site":  {
						"filename":  "extension.go",
						"line":  "134",
						"column":  "20"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "legacy_extension.go",
						"line":  "96",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init google.golang.org/protobuf/runtime/protoimpl.init google.golang.org/protobuf/internal/impl.init",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init"
				},
				{
					"name":  "google.golang.org/protobuf/runtime/protoimpl.init"
				},
				{
					"name":  "google.golang.org/protobuf/internal/impl.init"
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/ghttp/protobuf.init#1 github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init (google.golang.org/protobuf/internal/filetype.Builder).Build (*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension (*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor (*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow (*google.golang.org/protobuf/internal/impl.ExtensionInfo).initFromLegacy reflect.Zero",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.init#1"
				},
				{
					"name":  "github.com/onsi/gomega/ghttp/protobuf.file_ghttp_protobuf_simple_message_proto_init",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "125",
						"column":  "60"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/filetype.Builder).Build",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "157",
						"column":  "9"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/reflect/protoregistry.Types).RegisterExtension",
					"site":  {
						"filename":  "build.go",
						"line":  "236",
						"column":  "46"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).TypeDescriptor",
					"site":  {
						"filename":  "registry.go",
						"line":  "542",
						"column":  "25"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).lazyInitSlow",
					"site":  {
						"filename":  "extension.go",
						"line":  "112",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.ExtensionInfo).initFromLegacy",
					"site":  {
						"filename":  "extension.go",
						"line":  "134",
						"column":  "20"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "legacy_extension.go",
						"line":  "96",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "protobuf",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/encoding/prototext.encoder).marshalAny (*google.golang.org/protobuf/internal/impl.MessageInfo).New reflect.New",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String"
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalAny",
					"site":  {
						"filename":  "encode.go",
						"line":  "171",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).New",
					"site":  {
						"filename":  "encode.go",
						"line":  "351",
						"column":  "13"
					}
				},
				{
					"name":  "reflect.New",
					"site":  {
						"filename":  "message.go",
						"line":  "226",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/ghttp/protobuf",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.G"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/gleak.HaveLeaked github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gleak.HaveLeaked"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "138",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match (reflect.Value).Convert",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Convert",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "171",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.HaveLeakedMatcher).filter"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "have_leaked_matcher.go",
						"line":  "277",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "32",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringGoroutinesMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_goroutines.go",
						"line":  "49",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "33",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "23",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringInBacktraceMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_in_backtrace.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "78",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "58",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gleak",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringTopFunctionMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_top_function.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gleak",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gmeasure.MeasurementType).UnmarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON encoding/json.Unmarshal (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gmeasure.MeasurementType).UnmarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON",
					"site":  {
						"filename":  "measurement.go",
						"line":  "25",
						"column":  "40"
					}
				},
				{
					"name":  "encoding/json.Unmarshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "31",
						"column":  "26"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "decode.go",
						"line":  "108",
						"column":  "20"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gmeasure.RankingCriteria).UnmarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON encoding/json.Unmarshal (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gmeasure.RankingCriteria).UnmarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON",
					"site":  {
						"filename":  "rank.go",
						"line":  "30",
						"column":  "39"
					}
				},
				{
					"name":  "encoding/json.Unmarshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "31",
						"column":  "26"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "decode.go",
						"line":  "108",
						"column":  "20"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gmeasure.Stat).UnmarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON encoding/json.Unmarshal (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gmeasure.Stat).UnmarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON",
					"site":  {
						"filename":  "stats.go",
						"line":  "28",
						"column":  "41"
					}
				},
				{
					"name":  "encoding/json.Unmarshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "31",
						"column":  "26"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "decode.go",
						"line":  "108",
						"column":  "20"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gmeasure.StatsType).UnmarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON encoding/json.Unmarshal (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gmeasure.StatsType).UnmarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON",
					"site":  {
						"filename":  "stats.go",
						"line":  "46",
						"column":  "46"
					}
				},
				{
					"name":  "encoding/json.Unmarshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "31",
						"column":  "26"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "decode.go",
						"line":  "108",
						"column":  "20"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).List (github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader (*encoding/json.Decoder).Decode (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).List"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader",
					"site":  {
						"filename":  "cache.go",
						"line":  "79",
						"column":  "34"
					}
				},
				{
					"name":  "(*encoding/json.Decoder).Decode",
					"site":  {
						"filename":  "cache.go",
						"line":  "62",
						"column":  "33"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "stream.go",
						"line":  "73",
						"column":  "23"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Load (*encoding/json.Decoder).Decode (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Load"
				},
				{
					"name":  "(*encoding/json.Decoder).Decode",
					"site":  {
						"filename":  "cache.go",
						"line":  "163",
						"column":  "12"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "stream.go",
						"line":  "73",
						"column":  "23"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Save (*encoding/json.Encoder).Encode (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).Save"
				},
				{
					"name":  "(*encoding/json.Encoder).Encode",
					"site":  {
						"filename":  "cache.go",
						"line":  "186",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "stream.go",
						"line":  "209",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader (*encoding/json.Decoder).Decode (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.ExperimentCache).readHeader"
				},
				{
					"name":  "(*encoding/json.Decoder).Decode",
					"site":  {
						"filename":  "cache.go",
						"line":  "62",
						"column":  "33"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "stream.go",
						"line":  "73",
						"column":  "23"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.MeasurementType).MarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.MeasurementType).MarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON",
					"site":  {
						"filename":  "measurement.go",
						"line":  "29",
						"column":  "89"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "40",
						"column":  "22"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.RankingCriteria).MarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.RankingCriteria).MarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON",
					"site":  {
						"filename":  "rank.go",
						"line":  "34",
						"column":  "88"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "40",
						"column":  "22"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.Stat).MarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.Stat).MarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON",
					"site":  {
						"filename":  "stats.go",
						"line":  "32",
						"column":  "79"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "40",
						"column":  "22"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.StatsType).MarshalJSON (github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.StatsType).MarshalJSON"
				},
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON",
					"site":  {
						"filename":  "stats.go",
						"line":  "50",
						"column":  "89"
					}
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "40",
						"column":  "22"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON encoding/json.Marshal (*encoding/json.encodeState).marshal (*encoding/json.encodeState).reflectValue (encoding/json.floatEncoder).encode$bound (encoding/json.floatEncoder).encode",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).MarshJSON"
				},
				{
					"name":  "encoding/json.Marshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "40",
						"column":  "22"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "162",
						"column":  "18"
					}
				},
				{
					"name":  "(*encoding/json.encodeState).reflectValue",
					"site":  {
						"filename":  "encode.go",
						"line":  "295",
						"column":  "16"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode$bound",
					"site":  {
						"filename":  "encode.go",
						"line":  "323",
						"column":  "17"
					}
				},
				{
					"name":  "(encoding/json.floatEncoder).encode"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gmeasure",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON encoding/json.Unmarshal (*encoding/json.decodeState).unmarshal (*encoding/json.decodeState).value (*encoding/json.decodeState).object reflect.MakeMap",
			"path":  [
				{
					"name":  "(github.com/onsi/gomega/gmeasure.enumSupport).UnmarshJSON"
				},
				{
					"name":  "encoding/json.Unmarshal",
					"site":  {
						"filename":  "enum_support.go",
						"line":  "31",
						"column":  "26"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).unmarshal",
					"site":  {
						"filename":  "decode.go",
						"line":  "108",
						"column":  "20"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).value",
					"site":  {
						"filename":  "decode.go",
						"line":  "181",
						"column":  "16"
					}
				},
				{
					"name":  "(*encoding/json.decodeState).object",
					"site":  {
						"filename":  "decode.go",
						"line":  "374",
						"column":  "22"
					}
				},
				{
					"name":  "reflect.MakeMap",
					"site":  {
						"filename":  "decode.go",
						"line":  "643",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gmeasure",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields$1 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields$1"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "fields.go",
						"line":  "123",
						"column":  "35"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys$1 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys$1"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "keys.go",
						"line":  "82",
						"column":  "60"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "222",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).Match (*github.com/onsi/gomega/gstruct.ElementsMatcher).matchElements (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).matchElements",
					"site":  {
						"filename":  "elements.go",
						"line":  "160",
						"column":  "30"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "elements.go",
						"line":  "178",
						"column":  "36"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "elements.go",
						"line":  "226",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).matchElements (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.ElementsMatcher).matchElements"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "elements.go",
						"line":  "178",
						"column":  "36"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "155",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).Match (*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields",
					"site":  {
						"filename":  "fields.go",
						"line":  "91",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "fields.go",
						"line":  "160",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.FieldsMatcher).matchFields"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "116",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).Match (*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys",
					"site":  {
						"filename":  "keys.go",
						"line":  "51",
						"column":  "26"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "keys.go",
						"line":  "121",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.KeysMatcher).matchKeys"
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gstruct",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gstruct.PointerMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "pointer.go",
						"line":  "44",
						"column":  "30"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gstruct",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3 (reflect.Value).Call",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3"
				},
				{
					"name":  "(reflect.Value).Call",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "325",
						"column":  "28"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1 (*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller$3$1"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "311",
						"column":  "48"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "188",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1 github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$1"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "412",
						"column":  "29"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "458",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3 (*github.com/onsi/gomega/internal.AsyncAssertion).match$2 (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$3"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match$2",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "478",
						"column":  "110"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "458",
						"column":  "26"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals"
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).NotTo (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).NotTo"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "74",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).Should (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "50",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "56",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).To (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).To"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "62",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).ToNot (*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).ToNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals$thunk",
					"site":  {
						"filename":  "assertion.go",
						"line":  "68",
						"column":  "22"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).match (*github.com/onsi/gomega/matchers.BeTrueMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match",
					"site":  {
						"filename":  "assertion.go",
						"line":  "91",
						"column":  "31"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals"
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.Assertion).vetError (*github.com/onsi/gomega/internal.Assertion).vetActuals github.com/onsi/gomega/internal.vetActuals reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetError"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.Assertion).vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "135",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/internal.vetActuals",
					"site":  {
						"filename":  "assertion.go",
						"line":  "117",
						"column":  "32"
					}
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "assertion.go",
						"line":  "148",
						"column":  "29"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).Should"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "145",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot (*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).ShouldNot"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "151",
						"column":  "24"
					}
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller"
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match (*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).match"
				},
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).buildActualPoller",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "392",
						"column":  "65"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher (*github.com/onsi/gomega/gexec.exitMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).pollMatcher"
				},
				{
					"name":  "(*github.com/onsi/gomega/gexec.exitMatcher).Match",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "375",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "exit_matcher.go",
						"line":  "49",
						"column":  "120"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "internal",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/internal.AsyncAssertion).processReturnValues"
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "async_assertion.go",
						"line":  "188",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/internal",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$1 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$1"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "80",
						"column":  "44"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$3 (reflect.Value).MapIndex",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$3"
				},
				{
					"name":  "(reflect.Value).MapIndex",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "88",
						"column":  "43"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$4 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$4"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "93",
						"column":  "35"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$6",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match$6"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match$1 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match$1"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "35",
						"column":  "44"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match$2 (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match$2"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "39",
						"column":  "35"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.appendMissingElements github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.appendMissingElements"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "148",
						"column":  "28"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.extractField (reflect.Value).Call",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.extractField"
				},
				{
					"name":  "(reflect.Value).Call",
					"site":  {
						"filename":  "have_field.go",
						"line":  "49",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.flatten (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.flatten"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "70",
						"column":  "42"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.matchers github.com/onsi/gomega/matchers.flatten (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.matchers"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.flatten",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "76",
						"column":  "27"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "70",
						"column":  "42"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.normalise gopkg.in/yaml.v3.Marshal (*gopkg.in/yaml.v3.encoder).marshalDoc (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.normalise"
				},
				{
					"name":  "gopkg.in/yaml.v3.Marshal",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "58",
						"column":  "29"
					}
				},
				{
					"name":  "(*gopkg.in/yaml.v3.encoder).marshalDoc",
					"site":  {
						"filename":  "yaml.go",
						"line":  "222",
						"column":  "14"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "encode.go",
						"line":  "98",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.presentable"
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.toString (*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String (google.golang.org/protobuf/internal/impl.Export).MessageStringOf (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format (google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal (google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal (google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage (google.golang.org/protobuf/encoding/prototext.encoder).marshalAny (*google.golang.org/protobuf/internal/impl.MessageInfo).New reflect.New",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.toString"
				},
				{
					"name":  "(*github.com/onsi/gomega/ghttp/protobuf.SimpleMessage).String",
					"site":  {
						"filename":  "type_support.go",
						"line":  "137",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/internal/impl.Export).MessageStringOf",
					"site":  {
						"filename":  "simple_message.pb.go",
						"line":  "43",
						"column":  "36"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Format",
					"site":  {
						"filename":  "api_export.go",
						"line":  "176",
						"column":  "58"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).Marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "96",
						"column":  "19"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.MarshalOptions).marshal",
					"site":  {
						"filename":  "encode.go",
						"line":  "104",
						"column":  "18"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalMessage",
					"site":  {
						"filename":  "encode.go",
						"line":  "138",
						"column":  "26"
					}
				},
				{
					"name":  "(google.golang.org/protobuf/encoding/prototext.encoder).marshalAny",
					"site":  {
						"filename":  "encode.go",
						"line":  "171",
						"column":  "18"
					}
				},
				{
					"name":  "(*google.golang.org/protobuf/internal/impl.MessageInfo).New",
					"site":  {
						"filename":  "encode.go",
						"line":  "351",
						"column":  "13"
					}
				},
				{
					"name":  "reflect.New",
					"site":  {
						"filename":  "message.go",
						"line":  "226",
						"column":  "18"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "github.com/onsi/gomega/matchers.valuesOf (reflect.Value).Interface",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/matchers.valuesOf"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "122",
						"column":  "61"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).FailureMessage",
					"site":  {
						"filename":  "and.go",
						"line":  "30",
						"column":  "44"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "54",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "and.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AndMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "and.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "32",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.AssignableToTypeOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "assignable_to_type_of_matcher.go",
						"line":  "36",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeADirectoryMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_directory.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "51",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeARegularFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_a_regular_file.go",
						"line":  "55",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeAnExistingFileMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_an_existing_file.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "43",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeClosedMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_closed_matcher.go",
						"line":  "47",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage github.com/google/go-cmp/cmp.Diff github.com/google/go-cmp/cmp.rootStep",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.Diff",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "44",
						"column":  "72"
					}
				},
				{
					"name":  "github.com/google/go-cmp/cmp.rootStep",
					"site":  {
						"filename":  "compare.go",
						"line":  "122",
						"column":  "24"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).Match github.com/google/go-cmp/cmp.Equal github.com/google/go-cmp/cmp.rootStep",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).Match"
				},
				{
					"name":  "github.com/google/go-cmp/cmp.Equal",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "40",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/google/go-cmp/cmp.rootStep",
					"site":  {
						"filename":  "compare.go",
						"line":  "97",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeComparableToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_comparable_to_matcher.go",
						"line":  "48",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "38",
						"column":  "66"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).Match github.com/onsi/gomega/matchers.flatten (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.flatten",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "22",
						"column":  "27"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "70",
						"column":  "42"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeElementOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "be_element_of_matcher.go",
						"line":  "42",
						"column":  "70"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "24",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "17",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEmptyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_empty_matcher.go",
						"line":  "28",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).Match (reflect.Value).Convert",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Convert",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "24",
						"column":  "52"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeEquivalentToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_equivalent_to_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeFalseMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_false_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeIdenticalToMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_identical_to.go",
						"line":  "38",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "40",
						"column":  "61"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).Match (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "25",
						"column":  "51"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeKeyOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "be_key_of_matcher.go",
						"line":  "44",
						"column":  "65"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "15",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNilMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_nil_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "18",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "39",
						"column":  "105"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeNumericallyMatcher).FormatFailureMessage",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "22",
						"column":  "37"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_numerically_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "60",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeSentMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_sent_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "19",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "34",
						"column":  "76"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTemporallyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_temporally_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "25",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "17",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeTrueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_true_matcher.go",
						"line":  "33",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "23",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).Match reflect.Zero",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).Match"
				},
				{
					"name":  "reflect.Zero",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "16",
						"column":  "27"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.BeZeroMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "be_zero_matcher.go",
						"line":  "27",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "134",
						"column":  "63"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match github.com/onsi/gomega/matchers.valuesOf (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.valuesOf",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "25",
						"column":  "20"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "122",
						"column":  "61"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ConsistOfMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "152",
						"column":  "64"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "169",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_element_matcher.go",
						"line":  "173",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "38",
						"column":  "69"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match github.com/onsi/gomega/matchers.valuesOf (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.valuesOf",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "21",
						"column":  "66"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "122",
						"column":  "61"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "contain_elements_matcher.go",
						"line":  "43",
						"column":  "70"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "20",
						"column":  "110"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ContainSubstringMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "contain_substring_matcher.go",
						"line":  "39",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "25",
						"column":  "71"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "18",
						"column":  "101"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveCapMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_cap_matcher.go",
						"line":  "29",
						"column":  "75"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "59",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveEachMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_each_matcher.go",
						"line":  "64",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "64",
						"column":  "77"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match github.com/onsi/gomega/matchers.valuesOf (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.valuesOf",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "29",
						"column":  "20"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "122",
						"column":  "61"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.presentable reflect.MakeSlice",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExactElementsMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.presentable",
					"site":  {
						"filename":  "have_exact_elements.go",
						"line":  "81",
						"column":  "70"
					}
				},
				{
					"name":  "reflect.MakeSlice",
					"site":  {
						"filename":  "consist_of.go",
						"line":  "108",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "31",
						"column":  "70"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match github.com/onsi/gomega/matchers.extractField (reflect.Value).Call",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "17",
						"column":  "23"
					}
				},
				{
					"name":  "(reflect.Value).Call",
					"site":  {
						"filename":  "have_field.go",
						"line":  "49",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveExistingFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_existing_field_matcher.go",
						"line":  "35",
						"column":  "74"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).FailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "89",
						"column":  "51"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "37",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match github.com/onsi/gomega/matchers.extractField (reflect.Value).Call",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.extractField",
					"site":  {
						"filename":  "have_field.go",
						"line":  "73",
						"column":  "44"
					}
				},
				{
					"name":  "(reflect.Value).Call",
					"site":  {
						"filename":  "have_field.go",
						"line":  "49",
						"column":  "39"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveFieldMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.EqualMatcher).NegatedFailureMessage",
					"site":  {
						"filename":  "have_field.go",
						"line":  "96",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "equal_matcher.go",
						"line":  "41",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "51",
						"column":  "110"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "33",
						"column":  "116"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "69",
						"column":  "110"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPBodyMatcher).body"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_body_matcher.go",
						"line":  "101",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "32",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "18",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "47",
						"column":  "43"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).extractHeader"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "79",
						"column":  "136"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPHeaderWithValueMatcher).getSubMatcher"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_header_with_value_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "52",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "26",
						"column":  "130"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage github.com/onsi/gomega/matchers.formatHttpResponse github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/matchers.formatHttpResponse",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "56",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "85",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveHTTPStatusMatcher).expectedString"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_http_status_matcher.go",
						"line":  "62",
						"column":  "38"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "43",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "28",
						"column":  "53"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_matcher.go",
						"line":  "52",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "34",
						"column":  "53"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveKeyWithValueMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_key_with_value_matcher.go",
						"line":  "75",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "23",
						"column":  "69"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "16",
						"column":  "112"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveLenMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_len_matcher.go",
						"line":  "27",
						"column":  "73"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "30",
						"column":  "83"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "22",
						"column":  "78"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveOccurredMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_occurred_matcher.go",
						"line":  "34",
						"column":  "63"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "17",
						"column":  "104"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HavePrefixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_prefix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "31",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "17",
						"column":  "104"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveSuffixMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "have_suffix_matcher.go",
						"line":  "35",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.HaveValueMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "have_value.go",
						"line":  "40",
						"column":  "36"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "76",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchErrorMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_error_matcher.go",
						"line":  "83",
						"column":  "24"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "35",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match (*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "17",
						"column":  "58"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "46",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "40",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchJSONMatcher).prettyPrint"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_json_matcher.go",
						"line":  "46",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "30",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "18",
						"column":  "98"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchRegexpMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_regexp_matcher.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).FailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "41",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "22",
						"column":  "61"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage (*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "46",
						"column":  "59"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchXMLMatcher).formattedPrint"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_xml_matcher.go",
						"line":  "54",
						"column":  "126"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "39",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "17",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "44",
						"column":  "40"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings (*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toNormalisedStrings"
				},
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "48",
						"column":  "56"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.MatchYAMLMatcher).toStrings"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "match_yaml_matcher.go",
						"line":  "68",
						"column":  "127"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "or.go",
						"line":  "34",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match (*github.com/onsi/gomega/gleak.ignoringCreator).Match github.com/onsi/gomega/gleak.G github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).Match"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).Match",
					"site":  {
						"filename":  "or.go",
						"line":  "20",
						"column":  "32"
					}
				},
				{
					"name":  "github.com/onsi/gomega/gleak.G",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "40",
						"column":  "13"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "util.go",
						"line":  "27",
						"column":  "30"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage (*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.OrMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(*github.com/onsi/gomega/gleak.ignoringCreator).NegatedFailureMessage",
					"site":  {
						"filename":  "or.go",
						"line":  "38",
						"column":  "55"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "ignoring_creator.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "78",
						"column":  "18"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match (reflect.Value).Call",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).Match"
				},
				{
					"name":  "(reflect.Value).Call",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "50",
						"column":  "30"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.PanicMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "panic_matcher.go",
						"line":  "97",
						"column":  "97"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).FailureMessage"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "100",
						"column":  "68"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.ReceiveMatcher).NegatedFailureMessage"
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "receive_matcher.go",
						"line":  "117",
						"column":  "75"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "61",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage github.com/onsi/gomega/format.Message github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SatisfyMatcher).NegatedFailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Message",
					"site":  {
						"filename":  "satisfy_matcher.go",
						"line":  "65",
						"column":  "23"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "format.go",
						"line":  "130",
						"column":  "48"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).FailureMessage"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "37",
						"column":  "77"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match github.com/onsi/gomega/format.Object github.com/onsi/gomega/format.formatValue (reflect.Value).Interface",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.SucceedMatcher).Match"
				},
				{
					"name":  "github.com/onsi/gomega/format.Object",
					"site":  {
						"filename":  "succeed_matcher.go",
						"line":  "25",
						"column":  "78"
					}
				},
				{
					"name":  "github.com/onsi/gomega/format.formatValue",
					"site":  {
						"filename":  "format.go",
						"line":  "265",
						"column":  "97"
					}
				},
				{
					"name":  "(reflect.Value).Interface",
					"site":  {
						"filename":  "format.go",
						"line":  "319",
						"column":  "25"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_TRANSITIVE"
		},
		{
			"packageName":  "matchers",
			"capability":  "CAPABILITY_REFLECT",
			"depPath":  "(*github.com/onsi/gomega/matchers.WithTransformMatcher).Match",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/matchers.WithTransformMatcher).Match"
				}
			],
			"packageDir":  "github.com/onsi/gomega/matchers",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.Build github.com/onsi/gomega/gexec.doBuild os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Build"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "33",
						"column":  "16"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "59",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.BuildIn github.com/onsi/gomega/gexec.doBuild os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "47",
						"column":  "16"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "59",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.BuildWithEnvironment github.com/onsi/gomega/gexec.doBuild os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.BuildWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild",
					"site":  {
						"filename":  "build.go",
						"line":  "40",
						"column":  "16"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "59",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTest github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "79",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestIn github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "115",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.CompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "97",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTest github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "90",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestIn"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "126",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.GetAndCompileTestWithEnvironment"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest",
					"site":  {
						"filename":  "build.go",
						"line":  "108",
						"column":  "22"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.Start (*os/exec.Cmd).Start",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.Start"
				},
				{
					"name":  "(*os/exec.Cmd).Start",
					"site":  {
						"filename":  "session.go",
						"line":  "94",
						"column":  "22"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.doBuild os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doBuild"
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "59",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.doCompileTest os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doCompileTest"
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "167",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.doGet os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.doGet"
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "145",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "github.com/onsi/gomega/gexec.getForTest github.com/onsi/gomega/gexec.doGet os/exec.Command",
			"path":  [
				{
					"name":  "github.com/onsi/gomega/gexec.getForTest"
				},
				{
					"name":  "github.com/onsi/gomega/gexec.doGet",
					"site":  {
						"filename":  "build.go",
						"line":  "138",
						"column":  "14"
					}
				},
				{
					"name":  "os/exec.Command",
					"site":  {
						"filename":  "build.go",
						"line":  "145",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		},
		{
			"packageName":  "gexec",
			"capability":  "CAPABILITY_EXEC",
			"depPath":  "(*github.com/onsi/gomega/gexec.Session).monitorForExit (*os/exec.Cmd).Wait",
			"path":  [
				{
					"name":  "(*github.com/onsi/gomega/gexec.Session).monitorForExit"
				},
				{
					"name":  "(*os/exec.Cmd).Wait",
					"site":  {
						"filename":  "session.go",
						"line":  "196",
						"column":  "23"
					}
				}
			],
			"packageDir":  "github.com/onsi/gomega/gexec",
			"capabilityType":  "CAPABILITY_TYPE_DIRECT"
		}
	],
	"moduleInfo":  [
		{
			"path":  "github.com/google/go-cmp",
			"version":  "v0.6.0"
		},
		{
			"path":  "golang.org/x/net",
			"version":  "v0.20.0"
		},
		{
			"path":  "golang.org/x/text",
			"version":  "v0.14.0"
		},
		{
			"path":  "google.golang.org/protobuf",
			"version":  "v1.33.0"
		},
		{
			"path":  "gopkg.in/yaml.v3",
			"version":  "v3.0.1"
		}
	],
	"packageInfo":  [
		{
			"path":  "github.com/google/go-cmp/cmp"
		},
		{
			"path":  "github.com/google/go-cmp/cmp/internal/diff",
			"ignoredFiles":  [
				"debug_enable.go"
			]
		},
		{
			"path":  "github.com/google/go-cmp/cmp/internal/flags"
		},
		{
			"path":  "github.com/google/go-cmp/cmp/internal/function"
		},
		{
			"path":  "github.com/google/go-cmp/cmp/internal/value"
		},
		{
			"path":  "github.com/onsi/gomega"
		},
		{
			"path":  "github.com/onsi/gomega/format"
		},
		{
			"path":  "github.com/onsi/gomega/gbytes"
		},
		{
			"path":  "github.com/onsi/gomega/gcustom"
		},
		{
			"path":  "github.com/onsi/gomega/gexec"
		},
		{
			"path":  "github.com/onsi/gomega/gexec/_fixture/firefly"
		},
		{
			"path":  "github.com/onsi/gomega/ghttp"
		},
		{
			"path":  "github.com/onsi/gomega/ghttp/protobuf"
		},
		{
			"path":  "github.com/onsi/gomega/gleak"
		},
		{
			"path":  "github.com/onsi/gomega/gleak/goroutine"
		},
		{
			"path":  "github.com/onsi/gomega/gmeasure"
		},
		{
			"path":  "github.com/onsi/gomega/gmeasure/table"
		},
		{
			"path":  "github.com/onsi/gomega/gstruct"
		},
		{
			"path":  "github.com/onsi/gomega/gstruct/errors"
		},
		{
			"path":  "github.com/onsi/gomega/internal"
		},
		{
			"path":  "github.com/onsi/gomega/internal/gutil",
			"ignoredFiles":  [
				"using_ioutil.go"
			]
		},
		{
			"path":  "github.com/onsi/gomega/matchers"
		},
		{
			"path":  "github.com/onsi/gomega/matchers/support/goraph/bipartitegraph"
		},
		{
			"path":  "github.com/onsi/gomega/matchers/support/goraph/edge"
		},
		{
			"path":  "github.com/onsi/gomega/matchers/support/goraph/node"
		},
		{
			"path":  "github.com/onsi/gomega/matchers/support/goraph/util"
		},
		{
			"path":  "github.com/onsi/gomega/types"
		},
		{
			"path":  "golang.org/x/net/html"
		},
		{
			"path":  "golang.org/x/net/html/atom",
			"ignoredFiles":  [
				"gen.go"
			]
		},
		{
			"path":  "golang.org/x/net/html/charset"
		},
		{
			"path":  "golang.org/x/text/encoding"
		},
		{
			"path":  "golang.org/x/text/encoding/charmap",
			"ignoredFiles":  [
				"maketables.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/htmlindex",
			"ignoredFiles":  [
				"gen.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/internal"
		},
		{
			"path":  "golang.org/x/text/encoding/internal/identifier",
			"ignoredFiles":  [
				"gen.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/japanese",
			"ignoredFiles":  [
				"maketables.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/korean",
			"ignoredFiles":  [
				"maketables.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/simplifiedchinese",
			"ignoredFiles":  [
				"maketables.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/traditionalchinese",
			"ignoredFiles":  [
				"maketables.go"
			]
		},
		{
			"path":  "golang.org/x/text/encoding/unicode"
		},
		{
			"path":  "golang.org/x/text/internal/language",
			"ignoredFiles":  [
				"gen.go",
				"gen_common.go"
			]
		},
		{
			"path":  "golang.org/x/text/internal/language/compact",
			"ignoredFiles":  [
				"gen.go",
				"gen_index.go",
				"gen_parents.go"
			]
		},
		{
			"path":  "golang.org/x/text/internal/tag"
		},
		{
			"path":  "golang.org/x/text/internal/utf8internal"
		},
		{
			"path":  "golang.org/x/text/language",
			"ignoredFiles":  [
				"gen.go"
			]
		},
		{
			"path":  "golang.org/x/text/runes"
		},
		{
			"path":  "golang.org/x/text/transform"
		},
		{
			"path":  "google.golang.org/protobuf/encoding/prototext"
		},
		{
			"path":  "google.golang.org/protobuf/encoding/protowire"
		},
		{
			"path":  "google.golang.org/protobuf/internal/descfmt"
		},
		{
			"path":  "google.golang.org/protobuf/internal/descopts"
		},
		{
			"path":  "google.golang.org/protobuf/internal/detrand"
		},
		{
			"path":  "google.golang.org/protobuf/internal/editiondefaults"
		},
		{
			"path":  "google.golang.org/protobuf/internal/encoding/defval"
		},
		{
			"path":  "google.golang.org/protobuf/internal/encoding/messageset"
		},
		{
			"path":  "google.golang.org/protobuf/internal/encoding/tag"
		},
		{
			"path":  "google.golang.org/protobuf/internal/encoding/text"
		},
		{
			"path":  "google.golang.org/protobuf/internal/errors",
			"ignoredFiles":  [
				"is_go112.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/internal/filedesc"
		},
		{
			"path":  "google.golang.org/protobuf/internal/filetype"
		},
		{
			"path":  "google.golang.org/protobuf/internal/flags",
			"ignoredFiles":  [
				"proto_legacy_enable.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/internal/genid"
		},
		{
			"path":  "google.golang.org/protobuf/internal/impl",
			"ignoredFiles":  [
				"codec_map_go111.go",
				"codec_reflect.go",
				"pointer_reflect.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/internal/order"
		},
		{
			"path":  "google.golang.org/protobuf/internal/pragma"
		},
		{
			"path":  "google.golang.org/protobuf/internal/set"
		},
		{
			"path":  "google.golang.org/protobuf/internal/strs",
			"ignoredFiles":  [
				"strings_pure.go",
				"strings_unsafe_go120.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/internal/version"
		},
		{
			"path":  "google.golang.org/protobuf/proto",
			"ignoredFiles":  [
				"proto_reflect.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/protoadapt"
		},
		{
			"path":  "google.golang.org/protobuf/reflect/protoreflect",
			"ignoredFiles":  [
				"value_pure.go",
				"value_unsafe_go120.go"
			]
		},
		{
			"path":  "google.golang.org/protobuf/reflect/protoregistry"
		},
		{
			"path":  "google.golang.org/protobuf/runtime/protoiface"
		},
		{
			"path":  "google.golang.org/protobuf/runtime/protoimpl"
		},
		{
			"path":  "gopkg.in/yaml.v3"
		}
	]
}
